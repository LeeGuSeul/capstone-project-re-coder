[{"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/index.js":"1","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/App.js":"2","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Layout/Footer.js":"3","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormSignUpFir.js":"4","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/Exam/TestPrecautions.js":"5","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormSignUp.js":"6","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Exam/CreateTestForm.js":"7","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormLogin.js":"8","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Exam/ProctorExamView.js":"9","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Layout/Header.js":"10","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/useFrom.js":"11","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/validateInfo.js":"12","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Editor/BoardEditor.js":"13","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/CreateProblem.js":"14","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Editor/QuizEditor.js":"15","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/useModal.js":"16","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/Index.js":"17","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/ContSideMenu.js":"18","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/ContTitle.js":"19","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/TestList.js":"20","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/JoinClass.js":"21","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/DeleteClass.js":"22"},{"size":350,"mtime":1613387771512,"results":"23","hashOfConfig":"24"},{"size":1561,"mtime":1613387771501,"results":"25","hashOfConfig":"24"},{"size":188,"mtime":1613388290508,"results":"26","hashOfConfig":"24"},{"size":2671,"mtime":1613388290512,"results":"27","hashOfConfig":"24"},{"size":4393,"mtime":1613388290510,"results":"28","hashOfConfig":"24"},{"size":2978,"mtime":1613388290512,"results":"29","hashOfConfig":"24"},{"size":12524,"mtime":1613388290511,"results":"30","hashOfConfig":"24"},{"size":5436,"mtime":1613388290512,"results":"31","hashOfConfig":"24"},{"size":8935,"mtime":1613388290511,"results":"32","hashOfConfig":"24"},{"size":1289,"mtime":1613388290508,"results":"33","hashOfConfig":"24"},{"size":2262,"mtime":1613388290513,"results":"34","hashOfConfig":"24"},{"size":928,"mtime":1613388290513,"results":"35","hashOfConfig":"24"},{"size":1148,"mtime":1613388290511,"results":"36","hashOfConfig":"24"},{"size":3809,"mtime":1613388290509,"results":"37","hashOfConfig":"24"},{"size":992,"mtime":1613388290511,"results":"38","hashOfConfig":"24"},{"size":981,"mtime":1613388290509,"results":"39","hashOfConfig":"24"},{"size":707,"mtime":1613388290510,"results":"40","hashOfConfig":"24"},{"size":1906,"mtime":1613388290510,"results":"41","hashOfConfig":"24"},{"size":370,"mtime":1613388290510,"results":"42","hashOfConfig":"24"},{"size":1729,"mtime":1613388290510,"results":"43","hashOfConfig":"24"},{"size":2065,"mtime":1613388290509,"results":"44","hashOfConfig":"24"},{"size":2425,"mtime":1613388290509,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rmm2l7",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/index.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/App.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Layout/Footer.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormSignUpFir.js",["97"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst FormSignUpFir = (props) => {\n  const [signOtion, setSignOtion] = useState(\"teacher\");\n  const history = useHistory();\n  console.log(signOtion);\n\n  const handleOptionChange = (e) => {\n    console.log(e.target.value);\n    if (!e.target.value) {\n      setSignOtion(\"teacher\");\n    } else {\n      setSignOtion(e.target.value);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div id=\"wrapper\" className=\"bg\">\n      <div id=\"container\">\n        <div className=\"top_txt\">\n          <p className=\"tit\">온라인 시험 감독 서비스 리코더</p>\n          <p>\n            부정행위 걱정 없이\n            <br />\n            온라인 시험을 운영, 감독하세요.\n          </p>\n        </div>\n        <div className=\"login_input_wrap\">\n          <div className=\"wlogo\">\n            <img\n              src=\"./img/login_join_logo.gif\"\n              alt=\"로그인, 회원가입 페이지 로고\"\n            />\n          </div>\n          <p className=\"txt\">홈페이지에 오신 것을 환영합니다.</p>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"sign_check\">\n              <div className=\"checks\">\n                <input\n                  type=\"radio\"\n                  id=\"ex_rd\"\n                  name=\"type_teacher\"\n                  value=\"teacher\"\n                  checked={signOtion === \"teacher\"}\n                  onChange={handleOptionChange}\n                />\n                <label for=\"ex_rd\" className=\"teacher\">\n                  <span>선생님으로 회원가입</span>\n                </label>\n              </div>\n\n              <div className=\"checks\">\n                <input\n                  type=\"radio\"\n                  id=\"ex_rd2\"\n                  name=\"type_student\"\n                  value=\"student\"\n                  checked={signOtion === \"student\"}\n                  onChange={handleOptionChange}\n                />\n                <label for=\"ex_rd2\" className=\"student\">\n                  <span>학생으로 회원가입</span>\n                </label>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"sign_check_btn\"\n              onClick={() => {\n                history.push({\n                  pathname: \"/FormSignUp\",\n                  state: { signOtion: signOtion },\n                });\n              }}\n            >\n              Next Step\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSignUpFir;\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/Exam/TestPrecautions.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormSignUp.js",["98","99","100"],"import Axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport useFrom from \"./useFrom\";\nimport validate from \"./validateInfo\";\nimport { useLocation } from \"react-router\";\n\nconst FormSignUp = ({ SignUpSuccessForm }, props) => {\n  const {\n    handleChange,\n    handleChangeType,\n    values,\n    handleSubmit,\n    errors,\n  } = useFrom(SignUpSuccessForm, validate, useLocation);\n\n  return (\n    <div id=\"wrapper\" className=\"bg\">\n      <div id=\"container\">\n        <div className=\"top_txt\">\n          <p className=\"tit\">\n            온라인 시험 감독 서비스 리코더 회원가입을 환영합니다.\n          </p>\n          <p>\n            부정행위 걱정 없이\n            <br />\n            온라인 시험을 운영, 감독하세요.\n          </p>\n        </div>\n        <div className=\"login_input_wrap\">\n          <div className=\"wlogo\">\n            <img\n              src=\"./img/login_join_logo.gif\"\n              alt=\"로그인, 회원가입 페이지 로고\"\n            />\n          </div>\n          <p className=\"txt\">Teacher Membership Window</p>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"userName\"\n              placeholder=\"이름 입력\"\n              value={values.userName}\n              onChange={handleChange}\n            />\n            {errors.userName && (\n              <p className=\"sign_required\">{errors.userName}</p>\n            )}\n            <input\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"아이디(이메일) 입력\"\n              value={values.userEmail}\n              onChange={handleChange}\n            />\n            {errors.userEmail && (\n              <p className=\"sign_required\">{errors.userEmail}</p>\n            )}\n            <input\n              type=\"password\"\n              name=\"userPasswd\"\n              placeholder=\"비밀번호 입력\"\n              value={values.userPasswd}\n              onChange={handleChange}\n            />\n            {errors.userPasswd && (\n              <p className=\"sign_required\">{errors.userPasswd}</p>\n            )}\n            <input\n              type=\"password\"\n              name=\"userPasswdConfirm\"\n              placeholder=\"비밀번호 입력확인\"\n              value={values.userPasswdConfirm}\n              onChange={handleChange}\n            />\n            {errors.userPasswdConfirm && (\n              <p className=\"sign_required\">{errors.userPasswdConfirm}</p>\n            )}\n            <input\n              type=\"text\"\n              name=\"userTel\"\n              placeholder=\"전화번호 입력\"\n              value={values.userTel}\n              onChange={handleChange}\n            />\n            {errors.userTel && (\n              <p className=\"sign_required\">{errors.userTel}</p>\n            )}\n            <input type=\"submit\" value=\"회원가입\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSignUp;\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Exam/CreateTestForm.js",["101"],"\nimport React, { useEffect, useState } from 'react'\nimport Footer from \"../../Layout/Footer\";\nimport BoardEditor from \"../Editor/BoardEditor\"\nimport CreateProblem from \"Components/Modal/CreateProblem\";\nimport DatePicker from \"react-date-picker\";\nimport \"react-date-picker/dist/DatePicker.css\";\nimport { useHistory, useParams } from 'react-router';\nimport axios from 'axios';\n\nconst CreateTestForm = () => {\n  const [selectDate, setSelectDate] = useState(new Date());\n  const [boardFormHtml, setBoardFormHtml] = useState(null);\n  const history = useHistory();\n  const [quizList, setQuizList] = useState([])\n  const ParamsClassCode = useParams();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n\n  // 시험지 정보\n  let TestFormInfo = {\n    class_code: \"\",\n    test_name: \"\",\n    test_start: \"\",\n    test_end: \"\",\n    test_wait: \"\",\n    test_caution: \"\",\n    test_retake: \"\",\n    test_shuffle: \"\",\n    test_escape: \"\",\n    test_lang: \"\",\n  };\n\n  const CreateTestFormSubmit = e => {\n    e.preventDefault();\n    TestFormInfo.class_code = ParamsClassCode.classCode;\n    TestFormInfo.test_name = e.target.text_name.value;\n    TestFormInfo.test_start =\n      e.target.test_date.value +\n      \" \" +\n      e.target.test_start_time.value +\n      \":\" +\n      e.target.test_start_min.value +\n      \":00\";\n    TestFormInfo.test_end =\n      e.target.test_date.value +\n      \" \" +\n      e.target.test_end_time.value +\n      \":\" +\n      e.target.test_end_min.value+\n      \":00\";\n    TestFormInfo.test_wait = \"00:\" + e.target.test_wait.value + \":00\";\n    TestFormInfo.test_caution = boardFormHtml;\n    TestFormInfo.test_retake = e.target.test_retake.value;\n    TestFormInfo.test_shuffle = e.target.test_shuffle.value;\n    TestFormInfo.test_escape = e.target.test_escape.value;\n    TestFormInfo.test_lang = e.target.test_lang.value;\n\n    console.log(TestFormInfo);\n    console.log(quizList);\n\n    const AllTestInfoArr = [];\n\n    AllTestInfoArr.push(TestFormInfo);\n    quizList.map((v, index) => AllTestInfoArr.push(quizList[index]));\n\n    console.log(AllTestInfoArr);\n\n\n    axios.post(\"/examcreate\", AllTestInfoArr)\n      .then((res) => {\n        console.log(res.data);\n        !alert(`[${TestFormInfo.test_name}] 시험 생성이 완료되었습니다.`) &&\n          history.push(`/teacher/${ParamsClassCode.classCode}`);\n        \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    return (\n      <div id=\"wrapper\">\n        <div className=\"create_class_container\">\n          <div className=\"form_contents\">\n            <form onSubmit={CreateTestFormSubmit}>\n              <div className=\"exam_name_form\">\n                <input\n                  name=\"text_name\"\n                  autocomplete=\"off\"\n                  placeholder=\"시험명을 입력하세요.\"\n                />\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">응시기간</p>\n                <DatePicker\n                  name=\"test_date\"\n                  onChange={(date) => setSelectDate(date)}\n                  dateFormat=\"yyyy/MM/dd\"\n                  value={selectDate}\n                  minDate={new Date()}\n                />\n                <div className=\"select_wrap\">\n                  <div className=\"select\">\n                    <select name=\"test_start_time\" id=\"slct\">\n                      <option selected disabled>\n                        시작시간(시)\n                      </option>\n                      <option value=\"09\">9시</option>\n                      <option value=\"10\">10시</option>\n                      <option value=\"11\">11시</option>\n                      <option value=\"12\">12시</option>\n                      <option value=\"13\">13시</option>\n                      <option value=\"14\">14시</option>\n                      <option value=\"15\">15시</option>\n                      <option value=\"16\">16시</option>\n                      <option value=\"17\">17시</option>\n                      <option value=\"18\">18시</option>\n                      <option value=\"19\">19시</option>\n                      <option value=\"20\">20시</option>\n                    </select>\n                  </div>\n                  <div className=\"select\">\n                    <select name=\"test_start_min\" id=\"slct\">\n                      <option selected disabled>\n                        시작시간(분)\n                      </option>\n                      <option value=\"00\">00분</option>\n                      <option value=\"10\">10분</option>\n                      <option value=\"20\">20분</option>\n                      <option value=\"30\">30분</option>\n                      <option value=\"40\">40분</option>\n                      <option value=\"50\">50분</option>\n                    </select>\n                  </div>\n                </div>\n                <span className=\"bar\">-</span>\n                <div className=\"select_wrap\">\n                  <div className=\"select\">\n                    <select name=\"test_end_time\" id=\"slct\">\n                      <option selected disabled>\n                        종료시간(시)\n                      </option>\n                      <option value=\"09\">9시</option>\n                      <option value=\"10\">10시</option>\n                      <option value=\"11\">11시</option>\n                      <option value=\"12\">12시</option>\n                      <option value=\"13\">13시</option>\n                      <option value=\"14\">14시</option>\n                      <option value=\"15\">15시</option>\n                      <option value=\"16\">16시</option>\n                      <option value=\"17\">17시</option>\n                      <option value=\"18\">18시</option>\n                      <option value=\"19\">19시</option>\n                      <option value=\"20\">20시</option>\n                    </select>\n                  </div>\n                  <div className=\"select\">\n                    <select name=\"test_end_min\" id=\"slct\">\n                      <option selected disabled>\n                        종료시간(분)\n                      </option>\n                      <option value=\"00\">00분</option>\n                      <option value=\"10\">10분</option>\n                      <option value=\"20\">20분</option>\n                      <option value=\"30\">30분</option>\n                      <option value=\"40\">40분</option>\n                      <option value=\"50\">50분</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">주의사항</p>\n                <BoardEditor setBoardFormHtml={setBoardFormHtml} />\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">시험대기시간</p>\n                <div className=\"select\">\n                  <select name=\"test_wait\" id=\"slct\">\n                    <option value=\"10\">10분</option>\n                    <option value=\"20\">20분</option>\n                    <option value=\"30\">30분</option>\n                    <option value=\"40\">40분</option>\n                    <option value=\"50\">50분</option>\n                  </select>\n                </div>\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">문제섞기</p>\n                <div className=\"radio_wrap\">\n                  <div className=\"light\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"test_shuffle\"\n                        value=\"1\"\n                        defaultChecked\n                      />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">허용</span>\n                    </label>\n                    <label>\n                      <input type=\"radio\" name=\"test_shuffle\" value=\"0\" />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">비허용</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">시험창 이탈허용</p>\n                <div className=\"radio_wrap\">\n                  <div className=\"light\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"test_escape\"\n                        value=\"1\"\n                        defaultChecked\n                      />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">허용</span>\n                    </label>\n                    <label>\n                      <input type=\"radio\" name=\"test_escape\" value=\"0\" />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">비허용</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">이어보기 설정</p>\n                <div className=\"radio_wrap\">\n                  <div className=\"light\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"test_retake\"\n                        value=\"3\"\n                        defaultChecked\n                      />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">무제한</span>\n                    </label>\n                    <label>\n                      <input type=\"radio\" name=\"test_retake\" value=\"1\" />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">1회</span>\n                    </label>\n                    <label>\n                      <input type=\"radio\" name=\"test_retake\" value=\"2\" />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">2회</span>\n                    </label>\n                    <label>\n                      <input type=\"radio\" name=\"test_retake\" value=\"4\" />\n                      <span class=\"design\"></span>\n                      <span class=\"text\">비허용</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              {/**/}\n              <div className=\"test_width_input\">\n                <p className=\"width_input_tit\">개발언어</p>\n                <div className=\"select\">\n                  <select name=\"test_lang\" id=\"slct\">\n                    <option value=\"PHP\">PHP</option>\n                    <option value=\"Python\">Python</option>\n                    <option value=\"JavaScript\">JavaScript</option>\n                    <option value=\"Java\">Java</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"questions_list\">\n                <div className=\"add_questions\">\n                  <p className=\"tit\">추가된 문제</p>\n                  <CreateProblem\n                    quizList={quizList}\n                    setQuizList={setQuizList}\n                  />\n                </div>\n                <div className=\"add_questions_list\">\n                  {quizList.length !== 0 ? (\n                    quizList.map((v) => (\n                      <div className=\"questions_box\">\n                        <p className=\"tit\">{v.question_name}</p>\n                        <p className=\"score\">\n                          <span>{v.question_score}</span>점\n                        </p>\n                        <div className=\"btn_wrap\">\n                          <div className=\"btn questions_modify\">수정하기</div>\n                          <div className=\"btn questions_delete\">삭제하기</div>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"questions_box\">생성된 문제가 없습니다.</div>\n                  )}\n                </div>\n              </div>\n              <div className=\"test_save_btn\">\n                <button type=\"submit\">시험 저장하기</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default CreateTestForm;\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/FormLogin.js",["102","103","104","105","106"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nconst api = axios.create({\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n});\n\nconst FormLogin = () => {\n  const [userId, setUserId] = useState();\n  const [userPasswd, setUserPasswd] = useState();\n  const [status, setStatus] = useState(null);\n  const history = useHistory();\n  const [data, setData] = useState();\n  const [cookies, setCookie, removeCookie] = useCookies();\n  const [loginType, setloginType] = useState(\"teacher\");\n\n    // 처음 시작 시 cookies 지우기\n    useEffect(() => {\n      removeCookie(\"t_email\");\n      removeCookie(\"t_name\");\n      removeCookie(\"s_email\");\n      removeCookie(\"s_name\");\n      removeCookie(\"isLogin\");\n    }, [])\n\n  const handleOptionChange = (e) => {\n    e.target.value ? setloginType(e.target.value) : setloginType(\"\");\n    console.log(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let data;\n\n    if (loginType === \"teacher\") {\n      data = {\n        t_email: userId,\n        t_password: userPasswd,\n      };\n      setData(data);\n    } else if (loginType === \"student\") {\n      data = {\n        s_email: userId,\n        s_password: userPasswd,\n      };\n      setData(data);\n    } else {\n      alert(\"선생님과 학생 중 선택해주세요.\");\n    }\n\n    console.log(data);\n\n    axios\n      .post(\"login\", data)\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.token);\n        console.log(res.data.login);\n\n        const { accessToken } = res.data;\n        axios.defaults.headers.common[\n          \"Authorization\"\n        ] = `Bearer ${accessToken}`;\n        console.log(accessToken);\n\n        if (res.data.login === \"success\" && res.data.token) {\n          console.log(res.data);\n          alert(\"로그인되었습니다.\");\n          setStatus(res.status);\n\n          if (loginType === \"teacher\") {\n            setCookie(\"t_email\", data.t_email);\n            setCookie(\"t_name\", res.data.t_name);\n            history.push(\"/teacher\");\n          } else if (loginType === \"student\") {\n            setCookie(\"s_email\", data.s_email);\n            setCookie(\"s_name\", res.data.s_name);\n            history.push(\"/student\");\n          }\n\n          setCookie(\"isLogin\", true);\n        } else {\n          alert(\"로그인에 실패하였습니다.\\n아이디와 비밀번호를 확인해 주세요.\");\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        err.response && err.response.data && console.log(err.response.data);\n        localStorage.removeItem(\"token\");\n        setStatus(err.status);\n      });\n  };\n\n\n  return (\n    <div id=\"wrapper\" className=\"bg\">\n      <div id=\"container\">\n        <div className=\"top_txt\">\n          <p className=\"tit\">온라인 시험 감독 서비스 리코더</p>\n          <p>\n            부정행위 걱정 없이\n            <br />\n            온라인 시험을 운영, 감독하세요.\n          </p>\n        </div>\n        <div className=\"login_input_wrap\">\n          <div className=\"wlogo\">\n            <img\n              src=\"./img/login_join_logo.gif\"\n              alt=\"로그인, 회원가입 페이지 로고\"\n            />\n          </div>\n          <p className=\"txt\">홈페이지에 오신 것을 환영합니다.</p>\n          <form action=\"\" onSubmit={handleSubmit}>\n            {/**/}\n            <div className=\"login_radio_area\">\n              <div className=\"toggle-button toggle-button--maa\">\n                <input\n                  id=\"login_teacher\"\n                  name=\"login_type\"\n                  type=\"radio\"\n                  value=\"teacher\"\n                  defaultChecked={true}\n                  onChange={handleOptionChange}\n                />\n                <label for=\"login_teacher\" data-text=\"선생님\"></label>\n                <div className=\"toggle-button__icon\"></div>\n              </div>\n              <div className=\"toggle-button toggle-button--maa\">\n                <input\n                  id=\"login_student\"\n                  name=\"login_type\"\n                  type=\"radio\"\n                  value=\"student\"\n                  onChange={handleOptionChange}\n                />\n                <label for=\"login_student\" data-text=\"학생\"></label>\n                <div className=\"toggle-button__icon\"></div>\n              </div>\n            </div>\n\n            <input\n              type=\"text\"\n              name=\"userId\"\n              onChange={(e) => {\n                setUserId(e.target.value);\n              }}\n              placeholder=\"아이디를 입력해주세요.\"\n            />\n            <input\n              type=\"password\"\n              name=\"userPasswd\"\n              onChange={(e) => {\n                setUserPasswd(e.target.value);\n              }}\n              placeholder=\"비밀번호를 입력해주세요.\"\n            />\n            <input type=\"submit\" value=\"로그인\" />\n          </form>\n\n          <p className=\"login_link mt30\">\n            아직 계정이 없으신가요? <Link to=\"/signup\">회원가입</Link>\n          </p>\n          <p className=\"login_link\">\n            아이디/비밀번호가 기억나지 않으신가요?{\" \"}\n            <Link to=\"\">아이디/비밀번호 찾기</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormLogin;\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Exam/ProctorExamView.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Layout/Header.js",["107","108","109"],"import React, { useState } from 'react'\nimport { cookies, useCookies } from 'react-cookie';\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Header = () => {\n  const [cookies, setCookie, removeCookie] = useCookies();\n    \n  const [loginText, setLoginText] = useState(\"로그인\");\n  const history = useHistory();\n\n        //임시\n  const loginState = (props) => {\n      if(localStorage.getItem('token')) {\n        alert(\"로그아웃 되었습니다.\");\n          setLoginText(\"로그아웃\");\n          localStorage.removeItem('token');\n            \n            removeCookie(\"t_email\");\n            removeCookie(\"t_name\");\n            removeCookie(\"s_email\");\n            removeCookie(\"s_name\");\n            removeCookie(\"isLogin\");\n          history.push(\"/\")\n          \n          setLoginText(\"로그인\");\n      }\n  }\n\n    return (\n        <div id=\"head\">\n            <div className=\"head_area\">\n                <div className=\"logo\"><Link to=\"/\"><img src=\"/img/logo.gif\" alt=\"Re:Coder 상단로고\" /></Link></div>\n                <ul>\n                    <li><Link to=\"/\" onClick={loginState}>{loginText}</Link></li>\n                    <li><Link to=\"/signup\">회원가입</Link></li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/useFrom.js",["110","111","112","113"],"import axios from 'axios';\nimport {useState, useEffect} from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport { useLocation } from \"react-router\";\n\nconst useForm = (callback, validate) => {\n\n    const location = useLocation();\n    const signUpType = location.state.signOtion;\n\n    const [values, setValues] = useState({\n        userName : '',\n        userEmail : '',\n        userPasswd : '',\n        userPasswdConfirm : '',\n        userTel : '',\n        signType : ''\n    });\n    const [errors, setErrors] = useState({});\n    const [SignUpSuccess, setSignUpSuccess] = useState(false);\n    const history = useHistory();\n    const [data, setData] = useState();\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setValues({\n            ...values,\n            [name] : value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        \n        let datas;\n\n        if(signUpType === \"teacher\") {\n            datas = {\n                t_email : values.userEmail,\n                t_name : values.userName,\n                t_password : values.userPasswd,\n                t_phone : values.userTel,\n                type : signUpType\n            };\n            setData(datas);\n        } else if (signUpType === \"student\"){\n            datas = {\n                s_email : values.userEmail,\n                s_name : values.userName,\n                s_password : values.userPasswd,\n                s_phone : values.userTel,\n                type : signUpType\n            };\n            setData(datas);\n        }\n\n        \n        console.log(datas);\n        setErrors(validate(values));\n\n        axios.post('signup', datas).then(res => {\n            console.log(res.data.mes);\n                if(res.data.mes === \"success\" && res.status === 200){\n                    alert(\"회원가입 되었습니다.\");\n                    history.push(\"/\")\n                }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n\n    }\n\n    useEffect (() => {\n            if (Object.keys(errors).length === 0 && SignUpSuccess) {\n                callback();\n            }\n        },\n        [errors]\n    );\n\n    return {handleChange, values, handleSubmit, errors};\n};\n\nexport default useForm;","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/User/validateInfo.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Editor/BoardEditor.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/CreateProblem.js",["114"],"import React, { useEffect, useRef, useState } from \"react\";\nimport useModal from \"./useModal\";\nimport QuizEditor from \"../Teacher/Editor/QuizEditor\";\n\nconst CreateProblemInfo = ({ setIsOpen, quizList, setQuizList }) => {\n  const [problemBoartHtml, setProblemBoartHtml] = useState(null);\n  const [questionName, setQuestionName] = useState(\"\");\n  const [questionScore, setQuestionSocre] = useState(\"\");\n  const [questionCode, setQuestionCode] = useState(\"\");\n\n  const CreateProblemList = e => {\n    e.preventDefault();\n    console.log(e);\n\n    let ProblemData = {\n      question_name: \"\",\n      question_score: \"\",\n      question_text: \"\",\n      question_code: \"\",\n    };\n\n    ProblemData.question_name = e.target.newClassName;\n    ProblemData.question_score = e.target.new_problem_score;\n    ProblemData.question_text = e.target.problemBoartHtml;\n    ProblemData.question_code = e.target.new_problem_default_code;\n\n    console.log(ProblemData);\n  };\n\n  const handleCreate = (e) => {\n    setQuizList([...quizList, {\n      question_name: questionName,\n      question_score:questionScore,\n      question_text:problemBoartHtml,\n      question_code:questionCode\n    }])\n  }\n\n  const handleChange = (e, setFunction) => {\n    e.preventDefault();\n    setFunction(e.target.value);\n  }\n\n  useEffect(() => {\n    console.log(questionName, questionScore, problemBoartHtml, questionCode)\n  })\n\n  return (\n    <div className=\"create_problem_area\">\n      <form onSubmit={CreateProblemList}>\n        <div className=\"input_area\">\n          <label>문제명</label>\n          <input\n            type=\"text\"\n            name=\"newClassName\"\n            className=\"new_problem_name\"\n            onChange={(e) => {\n              handleChange(e, setQuestionName);\n            }}\n          />\n        </div>\n        <div className=\"input_area\">\n          <label>배점</label>\n          <input\n            type=\"text\"\n            name=\"newClassScore\"\n            className=\"new_problem_score\"\n            onChange={(e) => {\n              handleChange(e, setQuestionSocre);\n            }}\n          />\n        </div>\n        <div className=\"text_area\">\n          <p>문제지문입력</p>\n          <QuizEditor setProblemBoartHtml={setProblemBoartHtml} />\n        </div>\n        <div className=\"text_area\">\n          <p>기본제공코드</p>\n          <textarea\n            name=\"new_problem_default_code\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"시험에 제공되는 기본 코드를 입력해주세요.\"\n            onChange={(e) => {\n              handleChange(e, setQuestionCode);\n            }}\n          ></textarea>\n          <div className=\"btn_wrap\">\n            <button\n              className=\"create_problem_btn\"\n              onClick={(e) => {\n                handleCreate();\n                setIsOpen(false);\n              }}\n            >\n              생성하기\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n\nconst CreateProblem = ({quizList, setQuizList}) => {\n  const [isOpen, setIsOpen, Modal] = useModal();\n\n  console.log(isOpen);\n  return (\n    <>\n      <div className=\"add_questions_btn\" onClick={() => setIsOpen(!isOpen)}>\n        문제 추가하기\n      </div>\n      <Modal>\n        <div className=\"modal create_problem \">\n          <div className=\"modal_area\">\n            <p className=\"tit\">새로운 문제 추가하기</p>\n\n            <CreateProblemInfo setIsOpen={setIsOpen}\n              setQuizList={setQuizList}\n              quizList={quizList}\n            />\n\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateProblem;\n","/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Teacher/Editor/QuizEditor.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/useModal.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/Index.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/ContSideMenu.js",["115","116","117"],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/ContTitle.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Student/TestList.js",[],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/JoinClass.js",["118","119","120"],"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/DeleteClass.js",[],{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"126","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":26},{"ruleId":"121","severity":1,"message":"127","line":10,"column":5,"nodeType":"123","messageId":"124","endLine":10,"endColumn":21},{"ruleId":"121","severity":1,"message":"128","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"129","line":6,"column":7,"nodeType":"123","messageId":"124","endLine":6,"endColumn":10},{"ruleId":"121","severity":1,"message":"130","line":15,"column":10,"nodeType":"123","messageId":"124","endLine":15,"endColumn":16},{"ruleId":"121","severity":1,"message":"131","line":17,"column":10,"nodeType":"123","messageId":"124","endLine":17,"endColumn":14},{"ruleId":"121","severity":1,"message":"132","line":18,"column":10,"nodeType":"123","messageId":"124","endLine":18,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":28,"column":8,"nodeType":"135","endLine":28,"endColumn":10,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"137","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":17},{"ruleId":"121","severity":1,"message":"138","line":6,"column":19,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"139","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"140","line":20,"column":27,"nodeType":"123","messageId":"124","endLine":20,"endColumn":43},{"ruleId":"121","severity":1,"message":"131","line":22,"column":12,"nodeType":"123","messageId":"124","endLine":22,"endColumn":16},{"ruleId":"133","severity":1,"message":"141","line":80,"column":9,"nodeType":"135","endLine":80,"endColumn":17,"suggestions":"142"},{"ruleId":"121","severity":1,"message":"143","line":1,"column":28,"nodeType":"123","messageId":"124","endLine":1,"endColumn":34},{"ruleId":"121","severity":1,"message":"138","line":9,"column":19,"nodeType":"123","messageId":"124","endLine":9,"endColumn":28},{"ruleId":"121","severity":1,"message":"144","line":9,"column":30,"nodeType":"123","messageId":"124","endLine":9,"endColumn":42},{"ruleId":"133","severity":1,"message":"145","line":35,"column":6,"nodeType":"135","endLine":35,"endColumn":8,"suggestions":"146"},{"ruleId":"121","severity":1,"message":"138","line":7,"column":19,"nodeType":"123","messageId":"124","endLine":7,"endColumn":28},{"ruleId":"121","severity":1,"message":"144","line":7,"column":30,"nodeType":"123","messageId":"124","endLine":7,"endColumn":42},{"ruleId":"121","severity":1,"message":"147","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":25},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.","'Footer' is defined but never used.","'api' is assigned a value but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'cookies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'removeCookie'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'cookies' is defined but never used.","'setCookie' is assigned a value but never used.","'Link' is defined but never used.","'setSignUpSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SignUpSuccess' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"'useRef' is defined but never used.","'removeCookie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readClass'. Either include it or remove the dependency array.",["150"],"'createClassList' is assigned a value but never used.",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [removeCookie]",{"range":"157","text":"158"},"Update the dependencies array to be: [SignUpSuccess, callback, errors]",{"range":"159","text":"160"},"Update the dependencies array to be: [readClass]",{"range":"161","text":"162"},[826,828],"[removeCookie]",[2143,2151],"[SignUpSuccess, callback, errors]",[912,914],"[readClass]"]