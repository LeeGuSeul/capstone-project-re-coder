[{"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js":"1","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js":"2","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js":"3","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js":"4","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js":"5","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js":"6","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js":"7","D:\\project\\ReCoder\\recoder-react\\src\\App.js":"8","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js":"9","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js":"10","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js":"11","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\index.js":"12","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\DeleteClass.js":"13","D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormLogin.js":"14","D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\useFrom.js":"15","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\index.js":"16","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Index.js":"17","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Layout\\Header.js":"18","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateClass.js":"19","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Exam\\TestPrecautions.js":"20","D:\\project\\ReCoder\\recoder-react\\src\\index.js":"21","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Index.js":"22","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\TestList.js":"23","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\QuizEditor.js":"24","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\ProctorExamView.js":"25","D:\\project\\capstone-project-re-coder\\src\\App.js":"26","D:\\project\\capstone-project-re-coder\\src\\index.js":"27","D:\\project\\capstone-project-re-coder\\src\\components\\Teacher\\Exam\\CreateTestForm.js":"28","D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormLogin.js":"29","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Exam\\CreateTestForm.js":"30","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\useModal.js":"31","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Exam\\ProctorExamView.js":"32","D:\\project\\capstone-project-re-coder\\src\\Components\\User\\validateInfo.js":"33","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Editor\\QuizEditor.js":"34","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\ClassTestList.js":"35","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\index.js":"36","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\index.js":"37","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Index.js":"38","D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\ClassMemList.js":"39","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\DeleteClass.js":"40","D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormSignUpFir.js":"41","D:\\project\\capstone-project-re-coder\\src\\Components\\User\\useFrom.js":"42","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\StdClassJoinApp.js":"43","D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormSignUp.js":"44","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\CreateProblem.js":"45","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Exam\\TestScreen.js":"46","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Index.js":"47","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\CreateClass.js":"48","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Exam\\TestPrecautions.js":"49","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\JoinClass.js":"50","D:\\project\\capstone-project-re-coder\\src\\Components\\Layout\\Footer.js":"51","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\ContSideMenu.js":"52","D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\TestList.js":"53"},{"size":3074,"mtime":1612098041941,"results":"54","hashOfConfig":"55"},{"size":2134,"mtime":1612336010302,"results":"56","hashOfConfig":"55"},{"size":12847,"mtime":1613028762514,"results":"57","hashOfConfig":"55"},{"size":3579,"mtime":1613035943478,"results":"58","hashOfConfig":"55"},{"size":3944,"mtime":1613042053292,"results":"59","hashOfConfig":"55"},{"size":1187,"mtime":1612922096551,"results":"60","hashOfConfig":"55"},{"size":1980,"mtime":1612251745841,"results":"61","hashOfConfig":"55"},{"size":1561,"mtime":1613145689610,"results":"62","hashOfConfig":"55"},{"size":580,"mtime":1612524499302,"results":"63","hashOfConfig":"55"},{"size":2042,"mtime":1612527777621,"results":"64","hashOfConfig":"55"},{"size":3446,"mtime":1612844797629,"results":"65","hashOfConfig":"55"},{"size":3282,"mtime":1613041412574,"results":"66","hashOfConfig":"55"},{"size":2509,"mtime":1612336005880,"results":"67","hashOfConfig":"55"},{"size":5614,"mtime":1612525703386,"results":"68","hashOfConfig":"55"},{"size":2347,"mtime":1612098035415,"results":"69","hashOfConfig":"55"},{"size":734,"mtime":1613041406989,"results":"70","hashOfConfig":"55"},{"size":3282,"mtime":1613041412574,"results":"71","hashOfConfig":"55"},{"size":1331,"mtime":1612333524254,"results":"72","hashOfConfig":"55"},{"size":1989,"mtime":1612335999510,"results":"73","hashOfConfig":"55"},{"size":4497,"mtime":1613191188968,"results":"74","hashOfConfig":"55"},{"size":350,"mtime":1611385103446,"results":"75","hashOfConfig":"55"},{"size":734,"mtime":1613041406989,"results":"76","hashOfConfig":"55"},{"size":1786,"mtime":1612099435315,"results":"77","hashOfConfig":"55"},{"size":1031,"mtime":1613041968957,"results":"78","hashOfConfig":"55"},{"size":9190,"mtime":1613151867848,"results":"79","hashOfConfig":"55"},{"size":1657,"mtime":1613474481442,"results":"80","hashOfConfig":"81"},{"size":365,"mtime":1613385031973,"results":"82","hashOfConfig":"81"},{"size":12847,"mtime":1613385031931,"results":"83","hashOfConfig":"81"},{"size":5909,"mtime":1613543861605,"results":"84","hashOfConfig":"81"},{"size":12949,"mtime":1613480200720,"results":"85","hashOfConfig":"81"},{"size":1022,"mtime":1613385031972,"results":"86","hashOfConfig":"81"},{"size":9190,"mtime":1613385031932,"results":"87","hashOfConfig":"81"},{"size":958,"mtime":1613385031964,"results":"88","hashOfConfig":"81"},{"size":1031,"mtime":1613385031929,"results":"89","hashOfConfig":"81"},{"size":3579,"mtime":1613385031900,"results":"90","hashOfConfig":"81"},{"size":3282,"mtime":1613385582468,"results":"91","hashOfConfig":"81"},{"size":734,"mtime":1613385589220,"results":"92","hashOfConfig":"81"},{"size":3567,"mtime":1613474482924,"results":"93","hashOfConfig":"81"},{"size":2473,"mtime":1613385031899,"results":"94","hashOfConfig":"81"},{"size":2509,"mtime":1613385031968,"results":"95","hashOfConfig":"81"},{"size":3037,"mtime":1613543954977,"results":"96","hashOfConfig":"81"},{"size":2347,"mtime":1613385031963,"results":"97","hashOfConfig":"81"},{"size":3446,"mtime":1613385031971,"results":"98","hashOfConfig":"81"},{"size":3375,"mtime":1613543904395,"results":"99","hashOfConfig":"81"},{"size":3944,"mtime":1613385031967,"results":"100","hashOfConfig":"81"},{"size":2222,"mtime":1613557292857,"results":"101","hashOfConfig":"81"},{"size":949,"mtime":1613474514387,"results":"102","hashOfConfig":"81"},{"size":1989,"mtime":1613385031966,"results":"103","hashOfConfig":"81"},{"size":4497,"mtime":1613385031896,"results":"104","hashOfConfig":"81"},{"size":2134,"mtime":1613385031969,"results":"105","hashOfConfig":"81"},{"size":199,"mtime":1613385031873,"results":"106","hashOfConfig":"81"},{"size":1980,"mtime":1613385031884,"results":"107","hashOfConfig":"81"},{"size":1786,"mtime":1613385031894,"results":"108","hashOfConfig":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},"134o7pz",{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kb2y4r",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"188"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"188"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js",["239","240","241"],"import Axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport useFrom from \"./useFrom\";\r\nimport validate from \"./validateInfo\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst FormSignUp = ({ SignUpSuccessForm }, props) => {\r\n  const {\r\n    handleChange,\r\n    handleChangeType,\r\n    values,\r\n    handleSubmit,\r\n    errors,\r\n  } = useFrom(SignUpSuccessForm, validate, useLocation);\r\n\r\n  return (\r\n    <div id=\"wrapper\" className=\"bg\">\r\n      <div id=\"container\">\r\n        <div className=\"top_txt\">\r\n          <p className=\"tit\">\r\n            온라인 시험 감독 서비스 리코더 회원가입을 환영합니다.\r\n          </p>\r\n          <p>\r\n            부정행위 걱정 없이\r\n            <br />\r\n            온라인 시험을 운영, 감독하세요.\r\n          </p>\r\n        </div>\r\n        <div className=\"login_input_wrap\">\r\n          <div className=\"wlogo\">\r\n            <img\r\n              src=\"./img/login_join_logo.gif\"\r\n              alt=\"로그인, 회원가입 페이지 로고\"\r\n            />\r\n          </div>\r\n          <p className=\"txt\">Teacher Membership Window</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              placeholder=\"이름 입력\"\r\n              value={values.userName}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userName && (\r\n              <p className=\"sign_required\">{errors.userName}</p>\r\n            )}\r\n            <input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              placeholder=\"아이디(이메일) 입력\"\r\n              value={values.userEmail}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userEmail && (\r\n              <p className=\"sign_required\">{errors.userEmail}</p>\r\n            )}\r\n            <input\r\n              type=\"password\"\r\n              name=\"userPasswd\"\r\n              placeholder=\"비밀번호 입력\"\r\n              value={values.userPasswd}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userPasswd && (\r\n              <p className=\"sign_required\">{errors.userPasswd}</p>\r\n            )}\r\n            <input\r\n              type=\"password\"\r\n              name=\"userPasswdConfirm\"\r\n              placeholder=\"비밀번호 입력확인\"\r\n              value={values.userPasswdConfirm}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userPasswdConfirm && (\r\n              <p className=\"sign_required\">{errors.userPasswdConfirm}</p>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              name=\"userTel\"\r\n              placeholder=\"전화번호 입력\"\r\n              value={values.userTel}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userTel && (\r\n              <p className=\"sign_required\">{errors.userTel}</p>\r\n            )}\r\n            <input type=\"submit\" value=\"회원가입\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignUp;\r\n",["242","243"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js",["244","245","246"],"import { useCookies } from 'react-cookie';\r\nimport useModal from \"./useModal\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst JoinClass = ({ readClass, classListUpdate, userClassInfo }) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [createClassList, setcreateClassList] = useState();\r\n  const [isOpen, setIsOpen, Modal] = useModal();\r\n  const inputTag = useRef();\r\n    \r\n    console.log(userClassInfo);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newClassData;\r\n    console.log(inputTag);\r\n    newClassData = {\r\n      class_code: inputTag.current.value,\r\n      s_email: cookies.s_email,\r\n    };\r\n\r\n    console.log(newClassData);\r\n    axios\r\n      .post(\"/classjoin\", newClassData)\r\n      .then((res) => {\r\n        setcreateClassList(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => readClass(), classListUpdate, setIsOpen(!isOpen));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(!isOpen)}>\r\n        <img src=\"/img/nav_plus_btn.gif\" alt=\"클래스 가입하기\" />\r\n      </button>\r\n      <Modal>\r\n        <div className=\"modal create_class\">\r\n          <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n              <p className=\"tit\">클래스 가입하기</p>\r\n              <p className=\"txt\">\r\n                클래스 초대번호를 입력하시면 해당 클래스에 가입하실 수 있습니다.\r\n              </p>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                ref={inputTag}\r\n                type=\"text\"\r\n                name=\"newClassName\"\r\n                placeholder=\"초대코드를 입력해주세요.\"\r\n              />\r\n              <button type=\"submit\">가입하기</button>\r\n            </form>\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinClass\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js",["247"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Footer from \"../../Layout/Footer\";\r\nimport BoardEditor from \"../Editor/BoardEditor\"\r\nimport CreateProblem from \"Components/Modal/CreateProblem\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport { useHistory, useParams } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst CreateTestForm = () => {\r\n  const [selectDate, setSelectDate] = useState(new Date());\r\n  const [boardFormHtml, setBoardFormHtml] = useState(null);\r\n  const history = useHistory();\r\n  const [quizList, setQuizList] = useState([])\r\n  const ParamsClassCode = useParams();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n  // 시험지 정보\r\n  let TestFormInfo = {\r\n    class_code: \"\",\r\n    test_name: \"\",\r\n    test_start: \"\",\r\n    test_end: \"\",\r\n    test_wait: \"\",\r\n    test_caution: \"\",\r\n    test_retake: \"\",\r\n    test_shuffle: \"\",\r\n    test_escape: \"\",\r\n    test_lang: \"\",\r\n  };\r\n\r\n  const CreateTestFormSubmit = e => {\r\n    e.preventDefault();\r\n    TestFormInfo.class_code = ParamsClassCode.classCode;\r\n    TestFormInfo.test_name = e.target.text_name.value;\r\n    TestFormInfo.test_start =\r\n      e.target.test_date.value +\r\n      \" \" +\r\n      e.target.test_start_time.value +\r\n      \":\" +\r\n      e.target.test_start_min.value +\r\n      \":00\";\r\n    TestFormInfo.test_end =\r\n      e.target.test_date.value +\r\n      \" \" +\r\n      e.target.test_end_time.value +\r\n      \":\" +\r\n      e.target.test_end_min.value+\r\n      \":00\";\r\n    TestFormInfo.test_wait = \"00:\" + e.target.test_wait.value + \":00\";\r\n    TestFormInfo.test_caution = boardFormHtml;\r\n    TestFormInfo.test_retake = e.target.test_retake.value;\r\n    TestFormInfo.test_shuffle = e.target.test_shuffle.value;\r\n    TestFormInfo.test_escape = e.target.test_escape.value;\r\n    TestFormInfo.test_lang = e.target.test_lang.value;\r\n\r\n    console.log(TestFormInfo);\r\n    console.log(quizList);\r\n\r\n    const AllTestInfoArr = [];\r\n\r\n    AllTestInfoArr.push(TestFormInfo);\r\n    quizList.map((v, index) => AllTestInfoArr.push(quizList[index]));\r\n\r\n    console.log(AllTestInfoArr);\r\n\r\n\r\n    axios.post(\"/examcreate\", AllTestInfoArr)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        !alert(`[${TestFormInfo.test_name}] 시험 생성이 완료되었습니다.`) &&\r\n          history.push(`/teacher/${ParamsClassCode.classCode}`);\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div className=\"create_class_container\">\r\n          <div className=\"form_contents\">\r\n            <form onSubmit={CreateTestFormSubmit}>\r\n              <div className=\"exam_name_form\">\r\n                <input\r\n                  name=\"text_name\"\r\n                  autocomplete=\"off\"\r\n                  placeholder=\"시험명을 입력하세요.\"\r\n                />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">응시기간</p>\r\n                <DatePicker\r\n                  name=\"test_date\"\r\n                  onChange={(date) => setSelectDate(date)}\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  value={selectDate}\r\n                  minDate={new Date()}\r\n                />\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_time\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        시작시간(시)\r\n                      </option>\r\n                      <option value=\"09\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_min\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        시작시간(분)\r\n                      </option>\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <span className=\"bar\">-</span>\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_time\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        종료시간(시)\r\n                      </option>\r\n                      <option value=\"09\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_min\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        종료시간(분)\r\n                      </option>\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">주의사항</p>\r\n                <BoardEditor setBoardFormHtml={setBoardFormHtml} />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험대기시간</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_wait\" id=\"slct\">\r\n                    <option value=\"10\">10분</option>\r\n                    <option value=\"20\">20분</option>\r\n                    <option value=\"30\">30분</option>\r\n                    <option value=\"40\">40분</option>\r\n                    <option value=\"50\">50분</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">문제섞기</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_shuffle\"\r\n                        value=\"1\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_shuffle\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험창 이탈허용</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_escape\"\r\n                        value=\"1\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_escape\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">이어보기 설정</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_retake\"\r\n                        value=\"3\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">무제한</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"1\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">1회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"2\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">2회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"4\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">개발언어</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_lang\" id=\"slct\">\r\n                    <option value=\"PHP\">PHP</option>\r\n                    <option value=\"Python\">Python</option>\r\n                    <option value=\"JavaScript\">JavaScript</option>\r\n                    <option value=\"Java\">Java</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"questions_list\">\r\n                <div className=\"add_questions\">\r\n                  <p className=\"tit\">추가된 문제</p>\r\n                  <CreateProblem\r\n                    quizList={quizList}\r\n                    setQuizList={setQuizList}\r\n                  />\r\n                </div>\r\n                <div className=\"add_questions_list\">\r\n                  {quizList.length !== 0 ? (\r\n                    quizList.map((v) => (\r\n                      <div className=\"questions_box\">\r\n                        <p className=\"tit\">{v.question_name}</p>\r\n                        <p className=\"score\">\r\n                          <span>{v.question_score}</span>점\r\n                        </p>\r\n                        <div className=\"btn_wrap\">\r\n                          <div className=\"btn questions_modify\">수정하기</div>\r\n                          <div className=\"btn questions_delete\">삭제하기</div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"questions_box\">생성된 문제가 없습니다.</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"test_save_btn\">\r\n                <button type=\"submit\">시험 저장하기</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CreateTestForm;\r\n",["248","249"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js",["250","251","252"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Loading from 'Components/User/Loading';\r\n\r\nconst ClassTestList = (classCode) => {\r\n  const [selectClassTestInfo, setSelectClassTestInfo] = useState([]);\r\n  const [testCode, setTestCode] = useState(\"\");\r\n  const classCodeParams = useParams();\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  // classCode.classCode.length === 0\r\n  //   ? console.log(\"prams쓰면 됨\")\r\n  //   : console.log(classCode.classCode.length);\r\n  // console.log(classCodeParams.classCode.length);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    classCode.classCode.length === 0\r\n      ? MenuSelect(classCodeParams.classCode)\r\n      : MenuSelect(classCode.classCode);\r\n  }, [classCode]);\r\n\r\n  const MenuSelect = e => {\r\n    flag === true && setFlag(false);\r\n    const data = {\r\n      class_code: e,\r\n    };\r\n\r\n    axios\r\n      .post(\"/classinfo\", data)\r\n      .then((res) => {\r\n        setSelectClassTestInfo(res.data);\r\n        setFlag(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ListUpdate = selectClassTestInfo ? (\r\n    selectClassTestInfo.map((currElement) => (\r\n      <tr>\r\n        <th scope=\"row\">{currElement.test_name}</th>\r\n        <td>{currElement.questioncount}문항</td>\r\n        <td>\r\n          {currElement.test_start} ~{currElement.test_end}\r\n        </td>\r\n        <td>\r\n          {currElement.t_test_status === 1 ? (\r\n            <p className=\"tch_test_state complete\">시험완료</p>\r\n          ) : (\r\n            <p className=\"tch_test_state start\">시험시작</p>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button onClick={() => TestListDelete(currElement.test_id)}>\r\n            <img src=\"/img/tch_test_delete_btn.png\" alt=\"시험 삭제 버튼\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ))\r\n  ) : (\r\n    <Loading />\r\n  );\r\n\r\n  const TestListDelete = (props) => {\r\n    let data = {\r\n      test_id: props,\r\n    };\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(\"/examdelete\", data)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(\"삭제되었습니다.\");\r\n        window.location.replace(`/teacher/${classCode.classCode}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return flag === true ? (\r\n    selectClassTestInfo.length === 0 ? (\r\n      <div className=\"no_test_guide\">\r\n        생성된 시험이 없습니다. <span>먼저 시험을 생성해주세요.</span>\r\n        <Link to=\"/createtestform\">시험 생성하기</Link>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <table className=\"tch_class_list_table\">\r\n          <colgroup>\r\n            <col width=\"25%\" />\r\n            <col width=\"10%\" />\r\n            <col width=\"37%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"8%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">시험명</th>\r\n              <th scope=\"col\">문항수</th>\r\n              <th scope=\"col\">시험일시</th>\r\n              <th scope=\"col\">상태</th>\r\n              <th scope=\"col\">삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{ListUpdate}</tbody>\r\n        </table>\r\n          <Link\r\n          to={`/createtestform/${classCodeParams.classCode}`}\r\n          className=\"create_test_btn\"\r\n        >\r\n          <span>시험 생성하기</span>\r\n        </Link>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <>\r\n      <Loading />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassTestList\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js",["253"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport useModal from \"./useModal\";\r\nimport QuizEditor from \"../Teacher/Editor/QuizEditor\";\r\n\r\nconst CreateProblemInfo = ({ setIsOpen, quizList, setQuizList }) => {\r\n  const [problemBoartHtml, setProblemBoartHtml] = useState(null);\r\n  const [questionName, setQuestionName] = useState(\"\");\r\n  const [questionScore, setQuestionSocre] = useState(\"\");\r\n  const [questionCode, setQuestionCode] = useState(\"\");\r\n\r\n  const CreateProblemList = e => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n\r\n    let ProblemData = {\r\n      question_name: \"\",\r\n      question_score: \"\",\r\n      question_text: \"\",\r\n      question_code: \"\",\r\n    };\r\n\r\n    ProblemData.question_name = e.target.newClassName;\r\n    ProblemData.question_score = e.target.new_problem_score;\r\n    ProblemData.question_text = e.target.problemBoartHtml;\r\n    ProblemData.question_code = e.target.new_problem_default_code;\r\n\r\n    console.log(ProblemData);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    setQuizList([...quizList, {\r\n      question_name: questionName,\r\n      question_score:questionScore,\r\n      question_text:problemBoartHtml,\r\n      question_code:questionCode\r\n    }])\r\n  }\r\n\r\n  const handleChange = (e, setFunction) => {\r\n    e.preventDefault();\r\n    setFunction(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(questionName, questionScore, problemBoartHtml, questionCode)\r\n  })\r\n\r\n  return (\r\n    <div className=\"create_problem_area\">\r\n      <form onSubmit={CreateProblemList}>\r\n        <div className=\"input_area\">\r\n          <label>문제명</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"newClassName\"\r\n            className=\"new_problem_name\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionName);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input_area\">\r\n          <label>배점</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"newClassScore\"\r\n            className=\"new_problem_score\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionSocre);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <p>문제지문입력</p>\r\n          <QuizEditor setProblemBoartHtml={setProblemBoartHtml} />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <p>기본제공코드</p>\r\n          <textarea\r\n            name=\"new_problem_default_code\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            placeholder=\"시험에 제공되는 기본 코드를 입력해주세요.\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionCode);\r\n            }}\r\n          ></textarea>\r\n          <div className=\"btn_wrap\">\r\n            <button\r\n              className=\"create_problem_btn\"\r\n              onClick={(e) => {\r\n                handleCreate();\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              생성하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst CreateProblem = ({quizList, setQuizList}) => {\r\n  const [isOpen, setIsOpen, Modal] = useModal();\r\n\r\n  console.log(isOpen);\r\n  return (\r\n    <>\r\n      <div className=\"add_questions_btn\" onClick={() => setIsOpen(!isOpen)}>\r\n        문제 추가하기\r\n      </div>\r\n      <Modal>\r\n        <div className=\"modal create_problem \">\r\n          <div className=\"modal_area\">\r\n            <p className=\"tit\">새로운 문제 추가하기</p>\r\n\r\n            <CreateProblemInfo setIsOpen={setIsOpen}\r\n              setQuizList={setQuizList}\r\n              quizList={quizList}\r\n            />\r\n\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProblem;\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js",[],["254","255"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js",["256","257","258"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport JoinClass from \"Components/Modal/JoinClass\";\r\nimport DeleteClass from \"Components/Modal/DeleteClass\";\r\n\r\nconst ContSideMenu = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [userClassInfo, setUserClassInfo] = useState([]);\r\n\r\n  const readClass = () => {\r\n    let userEmail;\r\n\r\n    if (cookies.t_email) {\r\n      userEmail = { t_email: cookies.t_email };\r\n    } else if (cookies.s_email) {\r\n      userEmail = { s_email: cookies.s_email };\r\n    } else {\r\n      return null;\r\n    }\r\n    console.log(userEmail);\r\n    axios\r\n      .post(\"classlist\", userEmail)\r\n      .then((res) => {\r\n        setUserClassInfo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    readClass();\r\n  }, []);\r\n\r\n  const classListUpdate = userClassInfo.map((currElement) => (\r\n    <li>\r\n      <Link to=\"\">\r\n        {currElement.class_name} <span>{currElement.recognize === 0 ? \"(가입승인중)\" : \"\"} </span>\r\n      </Link>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div id=\"nav_menu\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"nav_tit\">\r\n            <p>나의 클래스</p>\r\n            <div className=\"nav_tit_btn\">\r\n              <JoinClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n              <DeleteClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ul className=\"dep2\">{classListUpdate}</ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 통계</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContSideMenu;\r\n",["259","260"],"D:\\project\\ReCoder\\recoder-react\\src\\App.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js",["261"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContTitle = () => {\r\n  return (\r\n    <div className=\"cont_tit\">\r\n      <p className=\"eng_txt\">className :</p>\r\n      <p className=\"class_name\">우당탕탕 웹디제이</p>\r\n\r\n      <div className=\"test_info\">\r\n        <p className=\"test_num\">\r\n          전체 시험 수 <span className=\"mint\">10</span>개\r\n        </p>\r\n        <p className=\"test_std\">\r\n          전체 학생 수 <span className=\"blue\">30</span>명\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContTitle;\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js",["262","263","264","265"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport CreateClass from \"Components/Modal/CreateClass\";\r\nimport DeleteClass from \"Components/Modal/DeleteClass\";\r\n\r\n\r\nconst ContSideMenu = ({ userClassInfo, setclassCode, readClass }) => {\r\n\r\n  const MenuState = useParams();\r\n  console.log(MenuState);\r\n  const test =\r\n    userClassInfo.length !== 0 && MenuState.classCode === undefined\r\n      ? userClassInfo[0].class_code\r\n      : MenuState.classCode;\r\n\r\n  const classListUpdate = () => {\r\n    if (userClassInfo.length === 0) {\r\n      return <li className=\"no_class_list\">생성된 클래스가 없습니다.</li>;\r\n    } else {\r\n      const ListUpdate = userClassInfo.map((currElement) => (\r\n        <li>\r\n          <Link\r\n            className={currElement.class_code === test ? \"on\" : \"\"}\r\n            to={`/teacher/${currElement.class_code}`}\r\n            onClick={() => {\r\n              setclassCode(currElement.class_code);\r\n            }}\r\n          >\r\n            {currElement.class_name}\r\n          </Link>\r\n        </li>\r\n      ));\r\n      return ListUpdate;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"nav_menu\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"nav_tit\">\r\n            <p>나의 클래스</p>\r\n            <div className=\"nav_tit_btn\">\r\n              <CreateClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n              />\r\n              <DeleteClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ul className=\"dep2\">{classListUpdate()}</ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 통계</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 체험하기</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContSideMenu;\r\n",["266","267"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js",["268","269","270","271","272"],"import React, { useEffect, useState } from 'react'\r\nimport useModal from \"./useModal\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n\r\n  const ClassJoinStdList = ({ appllyStdList, classCode, setIsOpen }) => {\r\n    const [stdList, setStdList] = useState([]);\r\n    const [stdData, setstdData] = useState([]);\r\n\r\n    const appllyStdListSubmit = () => {\r\n      let data = {\r\n        class_code: \"\",\r\n        s_email: \"\",\r\n      };\r\n\r\n      stdList.map((v) => {\r\n        data = { class_code: classCode.classCode, s_email: v.s_email };\r\n        stdData.push(data);\r\n      });\r\n\r\n      axios\r\n        .post(\"/classrecognize\", stdData)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .then(() => setIsOpen(false));\r\n    };\r\n\r\n    return (\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          appllyStdListSubmit();\r\n        }}\r\n      >\r\n        <div className=\"class_list_area\">\r\n          {appllyStdList.length === 0 ? (\r\n            <p className=\"no_class_list\">가입 신청한 학생이 없습니다.</p>\r\n          ) : (appllyStdList.map((v, index) =>\r\n              v.recognize === 0 ? (\r\n                <div className=\"class_list_check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`stdLikt-${index}`}\r\n                    name={v.s_email}\r\n                    onChange={(e) => {\r\n                      e.target.checked\r\n                        ? setStdList([...stdList, v])\r\n                        : setStdList(stdList.filter((value) => value !== v));\r\n                    }}\r\n                  />\r\n                  <label for={`stdLikt-${index}`}>\r\n                    {v.s_name}\r\n                    <span className=\"std_email\">{v.s_email}</span>\r\n                  </label>\r\n                </div>\r\n              ) : null\r\n            )\r\n          )}\r\n        </div>\r\n        <button type=\"submit\">가입승인</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\nconst StdClassJoinApp = ({ appllyStdList, classCode }) => {\r\n  const [isOpen, setIsOpen, Modal] = useModal();  \r\n  \r\n  const valueChecked = () => { \r\n      if (appllyStdList) {\r\n        const data = {\r\n          class_code: classCode.classCode,\r\n          s_email: appllyStdList.s_email,\r\n        };\r\n        const ddd = [];\r\n        ddd.push(data);\r\n        return ddd;\r\n      }\r\n  }\r\n  \r\n\r\n  // classinfo API 완료 후 클래스 회원 가입 승인 작업\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(!isOpen)}>신청학생승인</button>\r\n      <Modal>\r\n        <div className=\"modal std_class_app\">\r\n          <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n              <p className=\"tit\">클래스 신청학생승인</p>\r\n              <p className=\"txt\">\r\n                클래스 가입을 신청한 학생들을 확인 및 승인을 할 수 있습니다.\r\n              </p>\r\n            </div>\r\n            <ClassJoinStdList\r\n              appllyStdList={appllyStdList}\r\n              classCode={classCode}\r\n              setIsOpen={setIsOpen}\r\n            />\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StdClassJoinApp\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\index.js",["273","274","275","276","277"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\DeleteClass.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormLogin.js",["278","279","280","281","282"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\useFrom.js",["283","284","285","286"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Index.js",["287","288","289","290","291"],"import React, { useEffect, useState } from \"react\";\r\nimport ContTitle from \"./ContTitle\";\r\nimport ClassMemList from \"./ClassMemList\";\r\nimport ClassTestList from \"./ClassTestList\";\r\nimport ContSideMenu from \"./ContSideMenu\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from 'axios'\r\nimport { Cookies, useCookies } from \"react-cookie\";\r\n\r\nconst Index = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [classCode, setclassCode] = useState(\"\"); //  해당 클래스 시험 정보\r\n  const [userClassInfo, setUserClassInfo] = useState([]);\r\n  const classCodeParams = useParams();\r\n\r\n    const readClass = () => {\r\n      let userEmail;\r\n    \r\n      if (cookies.t_email) {\r\n        userEmail = { t_email: cookies.t_email };\r\n      } else if (cookies.s_email) {\r\n        userEmail = { s_email: cookies.s_email };\r\n      } else {\r\n        return null;\r\n      }\r\n\r\n      console.log(userEmail);\r\n      axios\r\n        .post(\"/classlist\", userEmail)\r\n        .then((res) => {\r\n          setUserClassInfo(res.data);\r\n          !classCodeParams.hasOwnProperty(\"classCode\")\r\n            ? setclassCode(res.data[0].class_code)\r\n            : setclassCode(classCodeParams.classCode);\r\n        })\r\n        .catch((err) => { \r\n          console.log(err);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n      readClass();\r\n    }, []);\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <div id=\"container\">\r\n        <ContSideMenu\r\n          setclassCode={setclassCode}\r\n          userClassInfo={userClassInfo}\r\n          readClass={readClass}\r\n        />\r\n        <div id=\"contents\">\r\n          <div className=\"cont_visual\">\r\n            <p className=\"eng small\">Welcome.</p>\r\n            <p className=\"eng big\">Re:Coder</p>\r\n            <p className=\"kor\">공정한 시험 문화를 위한 코딩 테스트 프로그램</p>\r\n          </div>\r\n          <div className=\"cont_tit\">\r\n            <p className=\"eng_txt\">className :</p>\r\n            <p className=\"class_name\">\r\n              {console.log(classCode)}\r\n              {userClassInfo.map((v) =>\r\n                v.class_code === classCode ? v.class_name : \"\"\r\n              )}\r\n            </p>\r\n\r\n            <div className=\"test_info\">\r\n              <p className=\"test_num\">\r\n                전체 시험 수 <span className=\"mint\">10</span>개\r\n              </p>\r\n              <p className=\"test_std\">\r\n                전체 학생 수 <span className=\"blue\">30</span>명\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"cont_wrap\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>시험관리</Tab>\r\n                <Tab>회원관리</Tab>\r\n                <Tab>클래스 통계</Tab>\r\n              </TabList>\r\n\r\n              <TabPanel>\r\n                <ClassTestList classCode={classCode} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <ClassMemList classCode={classCode} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <img src=\"../img/tab_page3.png\" alt=\"클래스통계_예시\" />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n",["292","293"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Layout\\Header.js",["294","295","296"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateClass.js",["297","298","299"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Exam\\TestPrecautions.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\TestList.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\QuizEditor.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\ProctorExamView.js",[],"D:\\project\\capstone-project-re-coder\\src\\App.js",["300","301"],"D:\\project\\capstone-project-re-coder\\src\\index.js",[],["302","303"],"D:\\project\\capstone-project-re-coder\\src\\components\\Teacher\\Exam\\CreateTestForm.js",["304"],"D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormLogin.js",["305","306","307","308","309"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Header from \"Components/Layout/Header\";\r\nimport Footer from \"Components/Layout/Footer\";\r\n\r\nconst api = axios.create({\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n});\r\n\r\nconst FormLogin = () => {\r\n  const [userId, setUserId] = useState();\r\n  const [userPasswd, setUserPasswd] = useState();\r\n  const [status, setStatus] = useState(null);\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [loginType, setloginType] = useState(\"teacher\");\r\n\r\n    // 처음 시작 시 cookies 지우기\r\n    useEffect(() => {\r\n      removeCookie(\"t_email\");\r\n      removeCookie(\"t_name\");\r\n      removeCookie(\"s_email\");\r\n      removeCookie(\"s_name\");\r\n      removeCookie(\"isLogin\");\r\n    }, [])\r\n\r\n  const handleOptionChange = (e) => {\r\n    e.target.value ? setloginType(e.target.value) : setloginType(\"\");\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data;\r\n\r\n    if (loginType === \"teacher\") {\r\n      data = {\r\n        t_email: userId,\r\n        t_password: userPasswd,\r\n      };\r\n      setData(data);\r\n    } else if (loginType === \"student\") {\r\n      data = {\r\n        s_email: userId,\r\n        s_password: userPasswd,\r\n      };\r\n      setData(data);\r\n    } else {\r\n      alert(\"선생님과 학생 중 선택해주세요.\");\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(\"login\", data)\r\n      .then((res) => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        console.log(res.data.login);\r\n\r\n        const { accessToken } = res.data;\r\n        axios.defaults.headers.common[\r\n          \"Authorization\"\r\n        ] = `Bearer ${accessToken}`;\r\n        console.log(accessToken);\r\n\r\n        if (res.data.login === \"success\" && res.data.token) {\r\n          console.log(res.data);\r\n          alert(\"로그인되었습니다.\");\r\n          setStatus(res.status);\r\n\r\n          if (loginType === \"teacher\") {\r\n            setCookie(\"t_email\", data.t_email);\r\n            setCookie(\"t_name\", res.data.t_name);\r\n            history.push(\"/teacher\");\r\n          } else if (loginType === \"student\") {\r\n            setCookie(\"s_email\", data.s_email);\r\n            setCookie(\"s_name\", res.data.s_name);\r\n            history.push(\"/student\");\r\n          }\r\n\r\n          setCookie(\"isLogin\", true);\r\n        } else {\r\n          alert(\"로그인에 실패하였습니다.\\n아이디와 비밀번호를 확인해 주세요.\");\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        err.response && err.response.data && console.log(err.response.data);\r\n        localStorage.removeItem(\"token\");\r\n        setStatus(err.status);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div id=\"wrapper\" className=\"bg\">\r\n        <div id=\"container\">\r\n          <div className=\"top_txt\">\r\n            <p className=\"tit\">온라인 시험 감독 서비스 리코더</p>\r\n            <p>\r\n              부정행위 걱정 없이\r\n              <br />\r\n              온라인 시험을 운영, 감독하세요.\r\n            </p>\r\n          </div>\r\n          <div className=\"login_input_wrap\">\r\n            <div className=\"wlogo\">\r\n              <img\r\n                src=\"./img/login_join_logo.gif\"\r\n                alt=\"로그인, 회원가입 페이지 로고\"\r\n              />\r\n            </div>\r\n            <p className=\"txt\">홈페이지에 오신 것을 환영합니다.</p>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n              {/**/}\r\n              <div className=\"login_radio_area\">\r\n                <div className=\"toggle-button toggle-button--maa\">\r\n                  <input\r\n                    id=\"login_teacher\"\r\n                    name=\"login_type\"\r\n                    type=\"radio\"\r\n                    value=\"teacher\"\r\n                    defaultChecked={true}\r\n                    onChange={handleOptionChange}\r\n                  />\r\n                  <label for=\"login_teacher\" data-text=\"선생님\"></label>\r\n                  <div className=\"toggle-button__icon\"></div>\r\n                </div>\r\n                <div className=\"toggle-button toggle-button--maa\">\r\n                  <input\r\n                    id=\"login_student\"\r\n                    name=\"login_type\"\r\n                    type=\"radio\"\r\n                    value=\"student\"\r\n                    onChange={handleOptionChange}\r\n                  />\r\n                  <label for=\"login_student\" data-text=\"학생\"></label>\r\n                  <div className=\"toggle-button__icon\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <input\r\n                type=\"text\"\r\n                name=\"userId\"\r\n                onChange={(e) => {\r\n                  setUserId(e.target.value);\r\n                }}\r\n                placeholder=\"아이디를 입력해주세요.\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"userPasswd\"\r\n                onChange={(e) => {\r\n                  setUserPasswd(e.target.value);\r\n                }}\r\n                placeholder=\"비밀번호를 입력해주세요.\"\r\n              />\r\n              <input type=\"submit\" value=\"로그인\" />\r\n            </form>\r\n\r\n            <p className=\"login_link mt30\">\r\n              아직 계정이 없으신가요? <Link to=\"/signup\">회원가입</Link>\r\n            </p>\r\n            <p className=\"login_link\">\r\n              아이디/비밀번호가 기억나지 않으신가요?{\" \"}\r\n              <Link to=\"\">아이디/비밀번호 찾기</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormLogin;\r\n",["310","311"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Exam\\CreateTestForm.js",[],["312","313"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\useModal.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Exam\\ProctorExamView.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\User\\validateInfo.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Editor\\QuizEditor.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\ClassTestList.js",["314","315","316"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\index.js",["317","318","319","320","321"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\index.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\Index.js",["322","323","324","325","326"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Teacher\\ClassMemList.js",["327"],"import React, { useEffect, useState } from \"react\";\r\nimport StdClassJoinApp from \"Components/Modal/StdClassJoinApp\";\r\nimport axios from \"axios\";\r\n\r\nconst ClassMemList = ( classCode ) => {\r\n  const [appllyStdList, setAppllyStdList] = useState([]);\r\n  const [appStdNum, setAppStdNum] = useState(0);\r\n\r\n  const data = {\r\n    class_code: classCode.classCode,\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  const appllyStdListApi = () => {\r\n    axios\r\n      .post(\"/usermanagement\", data)\r\n      .then((res) => {\r\n        setAppllyStdList(res.data);\r\n        setAppStdNum(setAppllyStdList.length);\r\n      })\r\n      \r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    appllyStdListApi();\r\n  }, []);\r\n\r\n  console.log(appStdNum);\r\n  return (\r\n    <>\r\n      <div className=\"cont_top_btn\">\r\n        {/* {appStdNum === 0 ? (\r\n          <span></span>\r\n        ) : (\r\n          <div className=\"app_std_info\">\r\n            {appStdNum}개의 가입 신청이 있습니다.\r\n          </div>\r\n        )}  추후 수정 */}\r\n        <StdClassJoinApp appllyStdList={appllyStdList} classCode={classCode} />\r\n        <button>학생삭제</button>\r\n      </div>\r\n      <div className=\"class_member_list\">\r\n        <div className=\"all_member\">\r\n          <div className=\"mem_check_box\">\r\n            <input type=\"checkbox\" id=\"a1\" name=\"전체동의\" />\r\n            <label for=\"a1\">\r\n              <span>rntmf1247</span>이구슬\r\n            </label>\r\n          </div>\r\n          <div className=\"mem_check_box\">\r\n            <input type=\"checkbox\" id=\"a2\" name=\"전체동의\" />\r\n            <label for=\"a2\">\r\n              <span>rntmf1247</span>이구슬\r\n            </label>\r\n          </div>\r\n          <div className=\"mem_check_box\">\r\n            <input type=\"checkbox\" id=\"a3\" name=\"전체동의\" />\r\n            <label for=\"a3\">\r\n              <span>rntmf1247</span>이구슬\r\n            </label>\r\n          </div>\r\n          <div className=\"mem_check_box\">\r\n            <input type=\"checkbox\" id=\"a4\" name=\"전체동의\" />\r\n            <label for=\"a4\">\r\n              <span>rntmf1247</span>이구슬\r\n            </label>\r\n          </div>\r\n          <div className=\"mem_check_box\">\r\n            <input type=\"checkbox\" id=\"a5\" name=\"전체동의\" />\r\n            <label for=\"a5\">\r\n              <span>rntmf1247</span>이구슬\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassMemList;\r\n","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\DeleteClass.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormSignUpFir.js",["328"],"D:\\project\\capstone-project-re-coder\\src\\Components\\User\\useFrom.js",["329","330","331","332"],"import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n    const location = useLocation();\r\n    const signUpType = location.state.signOtion;\r\n\r\n    const [values, setValues] = useState({\r\n        userName : '',\r\n        userEmail : '',\r\n        userPasswd : '',\r\n        userPasswdConfirm : '',\r\n        userTel : '',\r\n        signType : ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [SignUpSuccess, setSignUpSuccess] = useState(false);\r\n    const history = useHistory();\r\n    const [data, setData] = useState();\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        \r\n        let datas;\r\n\r\n        if(signUpType === \"teacher\") {\r\n            datas = {\r\n                t_email : values.userEmail,\r\n                t_name : values.userName,\r\n                t_password : values.userPasswd,\r\n                t_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        } else if (signUpType === \"student\"){\r\n            datas = {\r\n                s_email : values.userEmail,\r\n                s_name : values.userName,\r\n                s_password : values.userPasswd,\r\n                s_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        }\r\n\r\n        \r\n        console.log(datas);\r\n        setErrors(validate(values));\r\n\r\n        axios.post('signup', datas).then(res => {\r\n            console.log(res.data.mes);\r\n                if(res.data.mes === \"success\" && res.status === 200){\r\n                    alert(\"회원가입 되었습니다.\");\r\n                    history.push(\"/\")\r\n                }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect (() => {\r\n            if (Object.keys(errors).length === 0 && SignUpSuccess) {\r\n                callback();\r\n            }\r\n        },\r\n        [errors]\r\n    );\r\n\r\n    return {handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForm;","D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\StdClassJoinApp.js",["333","334","335","336","337"],"D:\\project\\capstone-project-re-coder\\src\\Components\\User\\FormSignUp.js",["338","339","340"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\CreateProblem.js",["341"],["342","343"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Exam\\TestScreen.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Index.js",[],["344","345"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\CreateClass.js",["346","347","348"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\Exam\\TestPrecautions.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Modal\\JoinClass.js",["349","350","351"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Layout\\Footer.js",[],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\ContSideMenu.js",["352","353","354"],"D:\\project\\capstone-project-re-coder\\src\\Components\\Student\\TestList.js",[],{"ruleId":"355","severity":1,"message":"356","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":13},{"ruleId":"355","severity":1,"message":"359","line":2,"column":17,"nodeType":"357","messageId":"358","endLine":2,"endColumn":26},{"ruleId":"355","severity":1,"message":"360","line":10,"column":5,"nodeType":"357","messageId":"358","endLine":10,"endColumn":21},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","replacedBy":"364"},{"ruleId":"355","severity":1,"message":"365","line":7,"column":19,"nodeType":"357","messageId":"358","endLine":7,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":7,"column":30,"nodeType":"357","messageId":"358","endLine":7,"endColumn":42},{"ruleId":"355","severity":1,"message":"367","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":25},{"ruleId":"355","severity":1,"message":"368","line":3,"column":8,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"361","replacedBy":"369"},{"ruleId":"363","replacedBy":"370"},{"ruleId":"355","severity":1,"message":"371","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":18},{"ruleId":"355","severity":1,"message":"372","line":8,"column":20,"nodeType":"357","messageId":"358","endLine":8,"endColumn":31},{"ruleId":"373","severity":1,"message":"374","line":22,"column":6,"nodeType":"375","endLine":22,"endColumn":17,"suggestions":"376"},{"ruleId":"355","severity":1,"message":"377","line":1,"column":28,"nodeType":"357","messageId":"358","endLine":1,"endColumn":34},{"ruleId":"361","replacedBy":"378"},{"ruleId":"363","replacedBy":"379"},{"ruleId":"355","severity":1,"message":"365","line":9,"column":19,"nodeType":"357","messageId":"358","endLine":9,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":9,"column":30,"nodeType":"357","messageId":"358","endLine":9,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":35,"column":6,"nodeType":"375","endLine":35,"endColumn":8,"suggestions":"381"},{"ruleId":"361","replacedBy":"382"},{"ruleId":"363","replacedBy":"383"},{"ruleId":"355","severity":1,"message":"384","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"359","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":26},{"ruleId":"355","severity":1,"message":"385","line":1,"column":28,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"386","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":20},{"ruleId":"355","severity":1,"message":"387","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":13},{"ruleId":"361","replacedBy":"388"},{"ruleId":"363","replacedBy":"389"},{"ruleId":"355","severity":1,"message":"359","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":26},{"ruleId":"355","severity":1,"message":"386","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":20},{"ruleId":"355","severity":1,"message":"390","line":9,"column":21,"nodeType":"357","messageId":"358","endLine":9,"endColumn":31},{"ruleId":"391","severity":1,"message":"392","line":17,"column":23,"nodeType":"393","messageId":"394","endLine":17,"endColumn":25},{"ruleId":"355","severity":1,"message":"395","line":73,"column":9,"nodeType":"357","messageId":"358","endLine":73,"endColumn":21},{"ruleId":"355","severity":1,"message":"396","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":17},{"ruleId":"355","severity":1,"message":"397","line":9,"column":10,"nodeType":"357","messageId":"358","endLine":9,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":12,"column":19,"nodeType":"357","messageId":"358","endLine":12,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":12,"column":30,"nodeType":"357","messageId":"358","endLine":12,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":44,"column":8,"nodeType":"375","endLine":44,"endColumn":10,"suggestions":"398"},{"ruleId":"355","severity":1,"message":"399","line":6,"column":7,"nodeType":"357","messageId":"358","endLine":6,"endColumn":10},{"ruleId":"355","severity":1,"message":"400","line":15,"column":10,"nodeType":"357","messageId":"358","endLine":15,"endColumn":16},{"ruleId":"355","severity":1,"message":"401","line":17,"column":10,"nodeType":"357","messageId":"358","endLine":17,"endColumn":14},{"ruleId":"355","severity":1,"message":"402","line":18,"column":10,"nodeType":"357","messageId":"358","endLine":18,"endColumn":17},{"ruleId":"373","severity":1,"message":"403","line":28,"column":8,"nodeType":"375","endLine":28,"endColumn":10,"suggestions":"404"},{"ruleId":"355","severity":1,"message":"384","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"405","line":20,"column":27,"nodeType":"357","messageId":"358","endLine":20,"endColumn":43},{"ruleId":"355","severity":1,"message":"401","line":22,"column":12,"nodeType":"357","messageId":"358","endLine":22,"endColumn":16},{"ruleId":"373","severity":1,"message":"406","line":80,"column":9,"nodeType":"375","endLine":80,"endColumn":17,"suggestions":"407"},{"ruleId":"355","severity":1,"message":"396","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":17},{"ruleId":"355","severity":1,"message":"397","line":9,"column":10,"nodeType":"357","messageId":"358","endLine":9,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":12,"column":19,"nodeType":"357","messageId":"358","endLine":12,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":12,"column":30,"nodeType":"357","messageId":"358","endLine":12,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":44,"column":8,"nodeType":"375","endLine":44,"endColumn":10,"suggestions":"408"},{"ruleId":"361","replacedBy":"409"},{"ruleId":"363","replacedBy":"410"},{"ruleId":"355","severity":1,"message":"411","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":17},{"ruleId":"355","severity":1,"message":"402","line":6,"column":10,"nodeType":"357","messageId":"358","endLine":6,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":6,"column":19,"nodeType":"357","messageId":"358","endLine":6,"endColumn":28},{"ruleId":"355","severity":1,"message":"365","line":7,"column":21,"nodeType":"357","messageId":"358","endLine":7,"endColumn":30},{"ruleId":"355","severity":1,"message":"366","line":7,"column":32,"nodeType":"357","messageId":"358","endLine":7,"endColumn":44},{"ruleId":"355","severity":1,"message":"367","line":8,"column":12,"nodeType":"357","messageId":"358","endLine":8,"endColumn":27},{"ruleId":"355","severity":1,"message":"412","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":14},{"ruleId":"355","severity":1,"message":"368","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"361","replacedBy":"413"},{"ruleId":"363","replacedBy":"414"},{"ruleId":"355","severity":1,"message":"368","line":3,"column":8,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"399","line":8,"column":7,"nodeType":"357","messageId":"358","endLine":8,"endColumn":10},{"ruleId":"355","severity":1,"message":"400","line":17,"column":10,"nodeType":"357","messageId":"358","endLine":17,"endColumn":16},{"ruleId":"355","severity":1,"message":"401","line":19,"column":10,"nodeType":"357","messageId":"358","endLine":19,"endColumn":14},{"ruleId":"355","severity":1,"message":"402","line":20,"column":10,"nodeType":"357","messageId":"358","endLine":20,"endColumn":17},{"ruleId":"373","severity":1,"message":"403","line":30,"column":8,"nodeType":"375","endLine":30,"endColumn":10,"suggestions":"415"},{"ruleId":"361","replacedBy":"416"},{"ruleId":"363","replacedBy":"417"},{"ruleId":"361","replacedBy":"418"},{"ruleId":"363","replacedBy":"419"},{"ruleId":"355","severity":1,"message":"371","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":18},{"ruleId":"355","severity":1,"message":"372","line":8,"column":20,"nodeType":"357","messageId":"358","endLine":8,"endColumn":31},{"ruleId":"373","severity":1,"message":"374","line":22,"column":6,"nodeType":"375","endLine":22,"endColumn":17,"suggestions":"420"},{"ruleId":"355","severity":1,"message":"396","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":17},{"ruleId":"355","severity":1,"message":"397","line":9,"column":10,"nodeType":"357","messageId":"358","endLine":9,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":12,"column":19,"nodeType":"357","messageId":"358","endLine":12,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":12,"column":30,"nodeType":"357","messageId":"358","endLine":12,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":44,"column":8,"nodeType":"375","endLine":44,"endColumn":10,"suggestions":"421"},{"ruleId":"355","severity":1,"message":"396","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":17},{"ruleId":"355","severity":1,"message":"397","line":9,"column":10,"nodeType":"357","messageId":"358","endLine":9,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":14,"column":19,"nodeType":"357","messageId":"358","endLine":14,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":14,"column":30,"nodeType":"357","messageId":"358","endLine":14,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":46,"column":8,"nodeType":"375","endLine":46,"endColumn":10,"suggestions":"422"},{"ruleId":"373","severity":1,"message":"423","line":30,"column":6,"nodeType":"375","endLine":30,"endColumn":8,"suggestions":"424"},{"ruleId":"355","severity":1,"message":"387","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":13},{"ruleId":"355","severity":1,"message":"384","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"405","line":20,"column":27,"nodeType":"357","messageId":"358","endLine":20,"endColumn":43},{"ruleId":"355","severity":1,"message":"401","line":22,"column":12,"nodeType":"357","messageId":"358","endLine":22,"endColumn":16},{"ruleId":"373","severity":1,"message":"406","line":80,"column":9,"nodeType":"375","endLine":80,"endColumn":17,"suggestions":"425"},{"ruleId":"355","severity":1,"message":"359","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":26},{"ruleId":"355","severity":1,"message":"386","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":20},{"ruleId":"355","severity":1,"message":"390","line":9,"column":21,"nodeType":"357","messageId":"358","endLine":9,"endColumn":31},{"ruleId":"391","severity":1,"message":"392","line":17,"column":23,"nodeType":"393","messageId":"394","endLine":17,"endColumn":25},{"ruleId":"355","severity":1,"message":"395","line":73,"column":9,"nodeType":"357","messageId":"358","endLine":73,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":13},{"ruleId":"355","severity":1,"message":"359","line":2,"column":17,"nodeType":"357","messageId":"358","endLine":2,"endColumn":26},{"ruleId":"355","severity":1,"message":"360","line":12,"column":5,"nodeType":"357","messageId":"358","endLine":12,"endColumn":21},{"ruleId":"355","severity":1,"message":"377","line":1,"column":28,"nodeType":"357","messageId":"358","endLine":1,"endColumn":34},{"ruleId":"361","replacedBy":"426"},{"ruleId":"363","replacedBy":"427"},{"ruleId":"361","replacedBy":"428"},{"ruleId":"363","replacedBy":"429"},{"ruleId":"355","severity":1,"message":"365","line":7,"column":21,"nodeType":"357","messageId":"358","endLine":7,"endColumn":30},{"ruleId":"355","severity":1,"message":"366","line":7,"column":32,"nodeType":"357","messageId":"358","endLine":7,"endColumn":44},{"ruleId":"355","severity":1,"message":"367","line":8,"column":12,"nodeType":"357","messageId":"358","endLine":8,"endColumn":27},{"ruleId":"355","severity":1,"message":"365","line":7,"column":19,"nodeType":"357","messageId":"358","endLine":7,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":7,"column":30,"nodeType":"357","messageId":"358","endLine":7,"endColumn":42},{"ruleId":"355","severity":1,"message":"367","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":25},{"ruleId":"355","severity":1,"message":"365","line":9,"column":19,"nodeType":"357","messageId":"358","endLine":9,"endColumn":28},{"ruleId":"355","severity":1,"message":"366","line":9,"column":30,"nodeType":"357","messageId":"358","endLine":9,"endColumn":42},{"ruleId":"373","severity":1,"message":"380","line":35,"column":6,"nodeType":"375","endLine":35,"endColumn":8,"suggestions":"430"},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.","no-native-reassign",["431"],"no-negated-in-lhs",["432"],"'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'createClassList' is assigned a value but never used.","'Footer' is defined but never used.",["431"],["432"],"'testCode' is assigned a value but never used.","'setTestCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'MenuSelect' and 'classCodeParams.classCode'. Either include them or remove the dependency array.","ArrayExpression",["433"],"'useRef' is defined but never used.",["431"],["432"],"React Hook useEffect has a missing dependency: 'readClass'. Either include it or remove the dependency array.",["434"],["431"],["432"],"'Link' is defined but never used.","'useState' is defined but never used.","'useCookies' is defined but never used.","'axios' is defined but never used.",["431"],["432"],"'setstdData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'valueChecked' is assigned a value but never used.","'ContTitle' is defined but never used.","'Cookies' is defined but never used.",["435"],"'api' is assigned a value but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'removeCookie'. Either include it or remove the dependency array.",["436"],"'setSignUpSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SignUpSuccess' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],["438"],["431"],["432"],"'cookies' is defined but never used.","'Header' is defined but never used.",["431"],["432"],["439"],["431"],["432"],["431"],["432"],["440"],["441"],["442"],"React Hook useEffect has a missing dependency: 'appllyStdListApi'. Either include it or remove the dependency array.",["443"],["444"],["431"],["432"],["431"],["432"],["445"],"no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"448","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"448","fix":"455"},{"desc":"451","fix":"456"},{"desc":"446","fix":"457"},{"desc":"448","fix":"458"},{"desc":"448","fix":"459"},{"desc":"460","fix":"461"},{"desc":"453","fix":"462"},{"desc":"448","fix":"463"},"Update the dependencies array to be: [MenuSelect, classCode, classCodeParams.classCode]",{"range":"464","text":"465"},"Update the dependencies array to be: [readClass]",{"range":"466","text":"467"},{"range":"468","text":"467"},"Update the dependencies array to be: [removeCookie]",{"range":"469","text":"470"},"Update the dependencies array to be: [SignUpSuccess, callback, errors]",{"range":"471","text":"472"},{"range":"473","text":"467"},{"range":"474","text":"470"},{"range":"475","text":"465"},{"range":"476","text":"467"},{"range":"477","text":"467"},"Update the dependencies array to be: [appllyStdListApi]",{"range":"478","text":"479"},{"range":"480","text":"472"},{"range":"481","text":"467"},[789,800],"[MenuSelect, classCode, classCodeParams.classCode]",[946,948],"[readClass]",[1394,1396],[853,855],"[removeCookie]",[2222,2230],"[SignUpSuccess, callback, errors]",[1394,1396],[949,951],[789,800],[1394,1396],[1490,1492],[722,724],"[appllyStdListApi]",[2222,2230],[946,948]]