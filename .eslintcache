[{"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdTestList.js":"1","D:\\project\\ReCoder\\recoder-react\\src\\components\\StdContTitle.js":"2","D:\\project\\ReCoder\\recoder-react\\src\\components\\TchContTitle.js":"3","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormMember.js":"4","D:\\project\\ReCoder\\recoder-react\\src\\components\\useFrom.js":"5","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUpFir.js":"6","D:\\project\\ReCoder\\recoder-react\\src\\App.js":"7","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUp.js":"8","D:\\project\\ReCoder\\recoder-react\\src\\components\\validateInfo.js":"9","D:\\project\\ReCoder\\recoder-react\\src\\components\\Header.js":"10","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormLogin.js":"11","D:\\project\\ReCoder\\recoder-react\\src\\components\\StdNavMenu.js":"12","D:\\project\\ReCoder\\recoder-react\\src\\components\\Footer.js":"13","D:\\project\\ReCoder\\recoder-react\\src\\components\\TchClassMem.js":"14","D:\\project\\ReCoder\\recoder-react\\src\\index.js":"15","D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\LoginContainer.js":"16","D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\LoginPresenter.js":"17","D:\\project\\ReCoder\\recoder-react\\src\\api.js":"18","D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\index.js":"19","D:\\project\\ReCoder\\recoder-react\\src\\components\\modal\\CreateClass.js":"20"},{"size":2940,"mtime":1607282374787,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1607168195066,"results":"23","hashOfConfig":"22"},{"size":909,"mtime":1611663229768,"results":"24","hashOfConfig":"22"},{"size":486,"mtime":1606662762188,"results":"25","hashOfConfig":"22"},{"size":2347,"mtime":1608023801659,"results":"26","hashOfConfig":"22"},{"size":2544,"mtime":1607270861438,"results":"27","hashOfConfig":"22"},{"size":1169,"mtime":1611306716477,"results":"28","hashOfConfig":"22"},{"size":3481,"mtime":1607275106223,"results":"29","hashOfConfig":"22"},{"size":958,"mtime":1607277116519,"results":"30","hashOfConfig":"22"},{"size":1115,"mtime":1611390143940,"results":"31","hashOfConfig":"22"},{"size":5879,"mtime":1611391675156,"results":"32","hashOfConfig":"22"},{"size":7428,"mtime":1611751677676,"results":"33","hashOfConfig":"22"},{"size":206,"mtime":1606558986868,"results":"34","hashOfConfig":"22"},{"size":3230,"mtime":1611750940489,"results":"35","hashOfConfig":"22"},{"size":350,"mtime":1611385103446,"results":"36","hashOfConfig":"22"},{"size":707,"mtime":1611313948426,"results":"37","hashOfConfig":"22"},{"size":181,"mtime":1611309290814,"results":"38","hashOfConfig":"22"},{"size":396,"mtime":1611367284391,"results":"39","hashOfConfig":"22"},{"size":80,"mtime":1611309331445,"results":"40","hashOfConfig":"22"},{"size":2616,"mtime":1611742988971,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"134o7pz",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdTestList.js",["95"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport StdNavMenu from './StdNavMenu'\r\nimport StdContTitle from './StdContTitle'\r\nimport TchContTitle from './TchContTitle'\r\n\r\n\r\nconst StdTestList = () => {\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <div id=\"container\">\r\n                <StdNavMenu />\r\n                <div id=\"contents\">\r\n                    <div className=\"cont_visual\">\r\n                        <p className=\"eng small\">Welcome.</p>\r\n                        <p className=\"eng big\">Re:Coder</p>\r\n                        <p className=\"kor\">공정한 시험 문화를 위한 코딩 테스트 프로그램</p>\r\n                    </div>\r\n                    <StdContTitle />\r\n                    <div className=\"cont_wrap\">\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn yellow\"><span>채점중</span></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn puple\">결과보기<div className=\"score\">80 / <span>100</span></div></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn mint\"><span>시험시작</span></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn red\"><span>미응시</span></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StdTestList\r\n",["96","97"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdContTitle.js",[],["98","99"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\TchContTitle.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormMember.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\useFrom.js",["100","101","102","103"],"import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n    const location = useLocation();\r\n    const signUpType = location.state.signOtion;\r\n\r\n    const [values, setValues] = useState({\r\n        userName : '',\r\n        userEmail : '',\r\n        userPasswd : '',\r\n        userPasswdConfirm : '',\r\n        userTel : '',\r\n        signType : ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [SignUpSuccess, setSignUpSuccess] = useState(false);\r\n    const history = useHistory();\r\n    const [data, setData] = useState();\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        \r\n        let datas;\r\n\r\n        if(signUpType === \"teacher\") {\r\n            datas = {\r\n                t_email : values.userEmail,\r\n                t_name : values.userName,\r\n                t_password : values.userPasswd,\r\n                t_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        } else if (signUpType === \"student\"){\r\n            datas = {\r\n                s_email : values.userEmail,\r\n                s_name : values.userName,\r\n                s_password : values.userPasswd,\r\n                s_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        }\r\n\r\n        \r\n        console.log(datas);\r\n        setErrors(validate(values));\r\n\r\n        axios.post('signup', datas).then(res => {\r\n            console.log(res.data.mes);\r\n                if(res.data.mes === \"success\" && res.status === 200){\r\n                    alert(\"회원가입 되었습니다.\");\r\n                    history.push(\"/\")\r\n                }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect (() => {\r\n            if (Object.keys(errors).length === 0 && SignUpSuccess) {\r\n                callback();\r\n            }\r\n        },\r\n        [errors]\r\n    );\r\n\r\n    return {handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForm;",["104","105"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUpFir.js",["106"],"import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst FormSignUpFir = (props) => {\r\n\r\n    const [signOtion, setSignOtion] = useState(\"teacher\");\r\n    const history = useHistory();\r\n    console.log(signOtion);\r\n\r\n    const handleOptionChange= e => {\r\n        console.log(e.target.value);\r\n        if(!e.target.value) {\r\n            setSignOtion(\"teacher\");\r\n        } else {\r\n            setSignOtion(e.target.value);\r\n        }\r\n    };\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n    };\r\n      \r\n      \r\n    return (\r\n        <div id=\"wrapper\" className=\"bg\">\r\n            <div id=\"container\">\r\n                <div className=\"top_txt\">\r\n                    <p className=\"tit\">온라인 시험 감독 서비스 리코더</p>\r\n                    <p>부정행위 걱정 없이<br />온라인 시험을 운영, 감독하세요.</p>\r\n                </div>\r\n                <div className=\"login_input_wrap\">\r\n                    <div className=\"wlogo\"><img src=\"./img/login_join_logo.gif\" alt=\"로그인, 회원가입 페이지 로고\" /></div>\r\n                    <p className=\"txt\">홈페이지에 오신 것을 환영합니다.</p>\r\n                    <form onSubmit={handleFormSubmit}>\r\n                        <div className=\"sign_check\">\r\n                            <div className=\"checks\">\r\n                                <input type=\"radio\" id=\"ex_rd\" name=\"type_teacher\" value=\"teacher\" checked={signOtion === \"teacher\"} onChange={handleOptionChange} /> \r\n                                <label for=\"ex_rd\" className=\"teacher\"><span>선생님으로 회원가입</span></label> \r\n                            </div>\r\n                    \r\n                            <div className=\"checks\">\r\n                                <input type=\"radio\" id=\"ex_rd2\" name=\"type_student\" value=\"student\" checked={signOtion === \"student\"} onChange={handleOptionChange} /> \r\n                                <label for=\"ex_rd2\" className=\"student\"><span>학생으로 회원가입</span></label> \r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"sign_check_btn\" onClick={() => {history.push({\r\n                        pathname: \"/FormSignUp\",\r\n                        state: {signOtion : signOtion}\r\n                        })}} >Next Step</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUpFir\r\n","D:\\project\\ReCoder\\recoder-react\\src\\App.js",[],["107","108"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUp.js",["109","110","111"],"import Axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport useFrom from './useFrom'\r\nimport validate from './validateInfo'\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst FormSignUp = ({SignUpSuccessForm}, props) => {\r\n    const {handleChange, handleChangeType, values, handleSubmit, errors} = useFrom(SignUpSuccessForm, validate, useLocation);\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(localStorage.getItem('token'))\r\n    // })\r\n\r\n    return (\r\n        <div id=\"wrapper\" className=\"bg\">\r\n            <div id=\"container\">\r\n                <div className=\"top_txt\">\r\n                    <p className=\"tit\">온라인 시험 감독 서비스 리코더 회원가입을 환영합니다.</p>\r\n                    <p>부정행위 걱정 없이<br />온라인 시험을 운영, 감독하세요.</p>\r\n                </div>\r\n                <div className=\"login_input_wrap\">\r\n                    <div className=\"wlogo\"><img src=\"./img/login_join_logo.gif\" alt=\"로그인, 회원가입 페이지 로고\" /></div>\r\n                    <p className=\"txt\">Teacher Membership Window</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"userName\"\r\n                            placeholder=\"이름 입력\"\r\n                            value={values.userName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userName && <p className=\"sign_required\">{errors.userName}</p>}\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"userEmail\"\r\n                            placeholder=\"아이디(이메일) 입력\"\r\n                            value={values.userEmail}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userEmail && <p className=\"sign_required\">{errors.userEmail}</p>}\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"userPasswd\"\r\n                            placeholder=\"비밀번호 입력\"\r\n                            value={values.userPasswd}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userPasswd && <p className=\"sign_required\">{errors.userPasswd}</p>}\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"userPasswdConfirm\"\r\n                            placeholder=\"비밀번호 입력확인\"\r\n                            value={values.userPasswdConfirm}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userPasswdConfirm && <p className=\"sign_required\">{errors.userPasswdConfirm}</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"userTel\"\r\n                            placeholder=\"전화번호 입력\"\r\n                            value={values.userTel}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userTel && <p className=\"sign_required\">{errors.userTel}</p>}\r\n                        <input type=\"submit\" value=\"회원가입\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUp;\r\n",["112","113"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\validateInfo.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\Header.js",["114","115","116"],"import React, { useState } from 'react'\r\nimport {useCookies} from 'react-cookie';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"t_email\"]);\r\n\r\n    \r\n  const [loginText, setLoginText] = useState(\"로그인\");\r\n  const history = useHistory();\r\n\r\n  const loginState = () => {\r\n      if(localStorage.getItem('token')) {\r\n        alert(\"로그아웃 되었습니다.\");\r\n          setLoginText(\"로그아웃\");\r\n          localStorage.removeItem('token');\r\n          history.push(\"/\")\r\n      } else {\r\n          setLoginText(\"로그인\");\r\n      }\r\n  }\r\n\r\n    return (\r\n        <div id=\"head\">\r\n            <div className=\"head_area\">\r\n                <div className=\"logo\"><Link to=\"/\"><img src=\"./img/logo.gif\" alt=\"Re:Coder 상단로고\" /></Link></div>\r\n                <ul>\r\n                    <li><Link to=\"/\" onClick={loginState}>{loginText}</Link></li>\r\n                    <li><Link to=\"/signup\">회원가입</Link></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormLogin.js",["117","118","119","120","121"],"import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useCookies} from 'react-cookie';\r\n\r\nconst api  =  axios.create({\r\n    headers:{\r\n        \"Access-Control-Allow-Origin\":\"*\"\r\n    }\r\n})\r\n\r\n\r\nconst FormLogin = () => {\r\n    const [userId, setUserId] = useState()\r\n    const [userPasswd, setUserPasswd] = useState()\r\n    const [status, setStatus] = useState(null)\r\n    const history = useHistory();\r\n    const [data, setData] = useState();\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n  \r\n\r\n    \r\n    const [loginType, setloginType] = useState(\"\");\r\n\r\n    const handleOptionChange= e => {\r\n        if(!e.target.value) {\r\n            setloginType(\"teacher\");\r\n        } else {\r\n            setloginType(e.target.value);\r\n        }\r\n        console.log(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n            \r\n        let data ;\r\n\r\n        // if(loginType === \"teacher\") {\r\n        //     const t_data = {\r\n        //         t_email : userId,\r\n        //         t_password : userPasswd\r\n        //     };\r\n        //     setData(t_data);\r\n        // } else if (loginType === \"student\"){\r\n        //     const s_data = {\r\n        //         s_email : userId,\r\n        //         s_password : userPasswd\r\n        //     };\r\n        //     setData(s_data);\r\n        // }\r\n\r\n\r\n        // -> funtion\r\n\r\n        if(loginType === \"teacher\") {\r\n            data = {\r\n                t_email : userId,\r\n                t_password : userPasswd\r\n            };\r\n            setData(data);\r\n            setCookie('t_email', data.t_email); // 쿠키 저장\r\n        } else if (loginType === \"student\"){\r\n            data = {\r\n                s_email : userId,\r\n                s_password : userPasswd\r\n            };\r\n            setData(data);\r\n        } else {\r\n            alert(\"선생님과 학생 중 선택해주세요.\");\r\n        }\r\n\r\n        console.log(data);\r\n\r\n        axios.post('login', data).then(res => {\r\n            \r\n            localStorage.setItem('token', res.data.token);\r\n            console.log(res.data.login);\r\n            \r\n            const { accessToken } = res.data;\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n            console.log(accessToken);\r\n\r\n            if(res.data.login === \"success\" && res.data.token){\r\n                console.log(res.data)\r\n                alert(\"로그인되었습니다.\");\r\n                setStatus(res.status)\r\n                setCookie('t_name', res.data.t_name); // 쿠키 저장\r\n\r\n                if(loginType === \"teacher\") {\r\n                    history.push(\"/TchclassMember\")\r\n                } else if (loginType === \"student\"){\r\n                    history.push(\"/stdTestList\")\r\n                }\r\n\r\n            }  else {\r\n                alert(\"로그인에 실패하였습니다.\\n아이디와 비밀번호를 확인해 주세요.\");\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n        .catch(err => {\r\n            err.response && err.response.data && console.log(err.response.data)\r\n            localStorage.removeItem('token')\r\n            setStatus(err.status)\r\n        })\r\n\r\n    }\r\n    // useEffect(()=>{\r\n    //     status == 200 && history.push(\"/stdList\")\r\n    // },[status])\r\n\r\n    console.log(cookies);\r\n\r\n    return (\r\n        <div id=\"wrapper\" className=\"bg\">\r\n            <div id=\"container\">\r\n                <div className=\"top_txt\">\r\n                    <p className=\"tit\">온라인 시험 감독 서비스 리코더</p>\r\n                    <p>부정행위 걱정 없이<br />온라인 시험을 운영, 감독하세요.</p>\r\n                </div>\r\n                <div className=\"login_input_wrap\">\r\n                    <div className=\"wlogo\"><img src=\"./img/login_join_logo.gif\" alt=\"로그인, 회원가입 페이지 로고\" /></div>\r\n                    <p className=\"txt\">홈페이지에 오신 것을 환영합니다.</p>\r\n                    <form action=\"\" onSubmit={handleSubmit}>\r\n                        {/**/}\r\n                        <div className=\"login_radio_area\">\r\n                            <div className=\"toggle-button toggle-button--maa\">\r\n                                <input id=\"login_teacher\" name=\"login_type\" type=\"radio\" value=\"teacher\" onChange={handleOptionChange} />\r\n                                <label for=\"login_teacher\" data-text=\"선생님\"></label>\r\n                                <div className=\"toggle-button__icon\"></div>\r\n                            </div>\r\n                            <div className=\"toggle-button toggle-button--maa\">\r\n                                <input id=\"login_student\" name=\"login_type\" type=\"radio\" value=\"student\" onChange={handleOptionChange} />\r\n                                <label for=\"login_student\" data-text=\"학생\"></label>\r\n                                <div className=\"toggle-button__icon\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <input type=\"text\" name=\"userId\" onChange={e => {setUserId(e.target.value) }} placeholder=\"아이디를 입력해주세요.\" />\r\n                        <input type=\"password\" name=\"userPasswd\" onChange={e => {setUserPasswd( e.target.value)}} placeholder=\"비밀번호를 입력해주세요.\" />\r\n                        <input type=\"submit\" value=\"로그인\" />\r\n                    </form>\r\n                    \r\n                    <p className=\"login_link mt30\">아직 계정이 없으신가요? <Link to=\"/signup\">회원가입</Link></p>\r\n                    <p className=\"login_link\">아이디/비밀번호가 기억나지 않으신가요? <Link to=\"\">아이디/비밀번호 찾기</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormLogin\r\n",["122","123"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdNavMenu.js",["124","125","126","127"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\Footer.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\TchClassMem.js",["128","129","130"],"D:\\project\\ReCoder\\recoder-react\\src\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\LoginContainer.js",["131","132"],"D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\LoginPresenter.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\api.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Routes\\Login\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\modal\\CreateClass.js",["133","134","135","136","137"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledModal = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, .8);\r\n  z-index:9999;\r\n  .modal {\r\n    box-shadow: 0 0 15px rgba(0, 0, 0, .1);\r\n    background-color: #fff;\r\n    border-radius:10px;\r\n    position: relative;\r\n    animation-name: grow-modal;\r\n    animation-duration: .3s;\r\n    animation-timing-function: ease-in-out;\r\n    @keyframes grow-modal {\r\n      0% { opacity: .2; }\r\n      25% { opacity: .4; }\r\n      50% { opacity: .6; }\r\n      75% { opacity: .8; }\r\n      100% {opacity: .9; }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateClass = ({ closeModal }) => {\r\n  let modalRef;\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [createClassList, setcreateClassList] = useState();\r\n  const [newClassName, setnewClassName] = useState();\r\n\r\n  const hideModal = (e) => {\r\n    if (modalRef && !modalRef.contains(e.target)) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('click', hideModal)\r\n    return () => {\r\n      document.removeEventListener('click', hideModal);\r\n    }\r\n  }, []);\r\n\r\nconst handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    let newClassData;\r\n\r\n    newClassData ={\r\n        class_name : newClassName,\r\n        t_email : cookies.t_email\r\n    };\r\n\r\n    await axios.post('classcreate', newClassData).then(res => {\r\n        setcreateClassList(res);\r\n    })\r\n    .catch(err => {\r\n\r\n    })\r\n    closeModal();\r\n}\r\n  \r\n  return (\r\n    <StyledModal>\r\n      <div className=\"modal create_class\">\r\n      <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n                <p className=\"tit\">클래스 생성하기</p>\r\n                <p className=\"txt\">학생 및 시험을 생성한 클래스별로 관리할 수 있습니다. </p>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"newClassName\" placeholder=\"클래스명을 입력해주세요.\"  onChange={e => {setnewClassName(e.target.value)}}   />\r\n                <button type=\"submit\">생성하기</button>\r\n            </form>\r\n            <button onClick={closeModal} className=\"modal_close\"><img src=\"./img/modal_close.gif\" alt=\"모달 닫기\"/></button>\r\n        </div>\r\n      </div>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default CreateClass\r\n",{"ruleId":"138","severity":1,"message":"139","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":20},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"138","severity":1,"message":"148","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"149","line":20,"column":27,"nodeType":"140","messageId":"141","endLine":20,"endColumn":43},{"ruleId":"138","severity":1,"message":"150","line":22,"column":12,"nodeType":"140","messageId":"141","endLine":22,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":80,"column":9,"nodeType":"153","endLine":80,"endColumn":17,"suggestions":"154"},{"ruleId":"142","replacedBy":"155"},{"ruleId":"144","replacedBy":"156"},{"ruleId":"138","severity":1,"message":"157","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"142","replacedBy":"158"},{"ruleId":"144","replacedBy":"159"},{"ruleId":"138","severity":1,"message":"160","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"161","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"162","line":8,"column":26,"nodeType":"140","messageId":"141","endLine":8,"endColumn":42},{"ruleId":"142","replacedBy":"163"},{"ruleId":"144","replacedBy":"164"},{"ruleId":"138","severity":1,"message":"165","line":6,"column":12,"nodeType":"140","messageId":"141","endLine":6,"endColumn":19},{"ruleId":"138","severity":1,"message":"166","line":6,"column":21,"nodeType":"140","messageId":"141","endLine":6,"endColumn":30},{"ruleId":"138","severity":1,"message":"167","line":6,"column":32,"nodeType":"140","messageId":"141","endLine":6,"endColumn":44},{"ruleId":"138","severity":1,"message":"161","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":25},{"ruleId":"138","severity":1,"message":"168","line":6,"column":7,"nodeType":"140","messageId":"141","endLine":6,"endColumn":10},{"ruleId":"138","severity":1,"message":"169","line":16,"column":12,"nodeType":"140","messageId":"141","endLine":16,"endColumn":18},{"ruleId":"138","severity":1,"message":"150","line":18,"column":12,"nodeType":"140","messageId":"141","endLine":18,"endColumn":16},{"ruleId":"138","severity":1,"message":"167","line":19,"column":32,"nodeType":"140","messageId":"141","endLine":19,"endColumn":44},{"ruleId":"142","replacedBy":"170"},{"ruleId":"144","replacedBy":"171"},{"ruleId":"138","severity":1,"message":"161","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"172","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"173","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"157","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":13},{"ruleId":"138","severity":1,"message":"166","line":9,"column":21,"nodeType":"140","messageId":"141","endLine":9,"endColumn":30},{"ruleId":"138","severity":1,"message":"167","line":9,"column":32,"nodeType":"140","messageId":"141","endLine":9,"endColumn":44},{"ruleId":"151","severity":1,"message":"174","line":36,"column":8,"nodeType":"153","endLine":36,"endColumn":10,"suggestions":"175"},{"ruleId":"138","severity":1,"message":"176","line":8,"column":23,"nodeType":"140","messageId":"141","endLine":8,"endColumn":35},{"ruleId":"138","severity":1,"message":"177","line":9,"column":12,"nodeType":"140","messageId":"141","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"148","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"166","line":38,"column":19,"nodeType":"140","messageId":"141","endLine":38,"endColumn":28},{"ruleId":"138","severity":1,"message":"167","line":38,"column":30,"nodeType":"140","messageId":"141","endLine":38,"endColumn":42},{"ruleId":"138","severity":1,"message":"178","line":39,"column":10,"nodeType":"140","messageId":"141","endLine":39,"endColumn":25},{"ruleId":"151","severity":1,"message":"179","line":53,"column":6,"nodeType":"153","endLine":53,"endColumn":8,"suggestions":"180"},"no-unused-vars","'TchContTitle' is defined but never used.","Identifier","unusedVar","no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"'Link' is defined but never used.","'setSignUpSuccess' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SignUpSuccess' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["183"],["181"],["182"],"'axios' is defined but never used.",["181"],["182"],"'Axios' is defined but never used.","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.",["181"],["182"],"'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'api' is assigned a value but never used.","'status' is assigned a value but never used.",["181"],["182"],"'Modal' is defined but never used.","'useCookies' is defined but never used.","React Hook useEffect has a missing dependency: 'readClass'. Either include it or remove the dependency array.",["184"],"'setUserLogin' is assigned a value but never used.","'Error' is assigned a value but never used.","'createClassList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hideModal'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [SignUpSuccess, callback, errors]",{"range":"192","text":"193"},"Update the dependencies array to be: [readClass]",{"range":"194","text":"195"},"Update the dependencies array to be: [hideModal]",{"range":"196","text":"197"},[2222,2230],"[SignUpSuccess, callback, errors]",[1019,1021],"[readClass]",[1397,1399],"[hideModal]"]