[{"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdTestList.js":"1","D:\\project\\ReCoder\\recoder-react\\src\\components\\StdContTitle.js":"2","D:\\project\\ReCoder\\recoder-react\\src\\components\\TchContTitle.js":"3","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormMember.js":"4","D:\\project\\ReCoder\\recoder-react\\src\\components\\useFrom.js":"5","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUpFir.js":"6","D:\\project\\ReCoder\\recoder-react\\src\\App.js":"7","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUp.js":"8","D:\\project\\ReCoder\\recoder-react\\src\\components\\validateInfo.js":"9","D:\\project\\ReCoder\\recoder-react\\src\\components\\Header.js":"10","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormLogin.js":"11","D:\\project\\ReCoder\\recoder-react\\src\\components\\StdNavMenu.js":"12","D:\\project\\ReCoder\\recoder-react\\src\\components\\Footer.js":"13","D:\\project\\ReCoder\\recoder-react\\src\\components\\TchClassMem.js":"14","D:\\project\\ReCoder\\recoder-react\\src\\index.js":"15"},{"size":2940,"mtime":1607282374787,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1607168195066,"results":"18","hashOfConfig":"17"},{"size":914,"mtime":1607168547048,"results":"19","hashOfConfig":"17"},{"size":486,"mtime":1606662762188,"results":"20","hashOfConfig":"17"},{"size":2347,"mtime":1608023801659,"results":"21","hashOfConfig":"17"},{"size":2544,"mtime":1607270861438,"results":"22","hashOfConfig":"17"},{"size":988,"mtime":1607423802754,"results":"23","hashOfConfig":"17"},{"size":3481,"mtime":1607275106223,"results":"24","hashOfConfig":"17"},{"size":958,"mtime":1607277116519,"results":"25","hashOfConfig":"17"},{"size":1000,"mtime":1607929623969,"results":"26","hashOfConfig":"17"},{"size":6005,"mtime":1611226270475,"results":"27","hashOfConfig":"17"},{"size":1144,"mtime":1606920525871,"results":"28","hashOfConfig":"17"},{"size":206,"mtime":1606558986868,"results":"29","hashOfConfig":"17"},{"size":2303,"mtime":1608025295713,"results":"30","hashOfConfig":"17"},{"size":255,"mtime":1606668627999,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"134o7pz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdTestList.js",["68"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport StdNavMenu from './StdNavMenu'\r\nimport StdContTitle from './StdContTitle'\r\nimport TchContTitle from './TchContTitle'\r\n\r\n\r\nconst StdTestList = () => {\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <div id=\"container\">\r\n                <StdNavMenu />\r\n                <div id=\"contents\">\r\n                    <div className=\"cont_visual\">\r\n                        <p className=\"eng small\">Welcome.</p>\r\n                        <p className=\"eng big\">Re:Coder</p>\r\n                        <p className=\"kor\">공정한 시험 문화를 위한 코딩 테스트 프로그램</p>\r\n                    </div>\r\n                    <StdContTitle />\r\n                    <div className=\"cont_wrap\">\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn yellow\"><span>채점중</span></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn puple\">결과보기<div className=\"score\">80 / <span>100</span></div></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn mint\"><span>시험시작</span></Link>\r\n                        </div>\r\n\r\n                        <div className=\"my_test_box\">\r\n                            <p className=\"test_name\">2020학년도 1학기 중간고사</p>\r\n                            <p className=\"question\">3문항</p>\r\n                            <p className=\"infobox date\">2020-07-26</p>\r\n                            <p className=\"infobox time\">AM 11:00 ~ AM 11:50</p>\r\n\r\n                            <Link to=\"\" className=\"test_btn red\"><span>미응시</span></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StdTestList\r\n",["69","70"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdContTitle.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\TchContTitle.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormMember.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\useFrom.js",["71","72","73","74"],"import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n    const location = useLocation();\r\n    const signUpType = location.state.signOtion;\r\n\r\n    const [values, setValues] = useState({\r\n        userName : '',\r\n        userEmail : '',\r\n        userPasswd : '',\r\n        userPasswdConfirm : '',\r\n        userTel : '',\r\n        signType : ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [SignUpSuccess, setSignUpSuccess] = useState(false);\r\n    const history = useHistory();\r\n    const [data, setData] = useState();\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        \r\n        let datas;\r\n\r\n        if(signUpType === \"teacher\") {\r\n            datas = {\r\n                t_email : values.userEmail,\r\n                t_name : values.userName,\r\n                t_password : values.userPasswd,\r\n                t_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        } else if (signUpType === \"student\"){\r\n            datas = {\r\n                s_email : values.userEmail,\r\n                s_name : values.userName,\r\n                s_password : values.userPasswd,\r\n                s_phone : values.userTel,\r\n                type : signUpType\r\n            };\r\n            setData(datas);\r\n        }\r\n\r\n        \r\n        console.log(datas);\r\n        setErrors(validate(values));\r\n\r\n        axios.post('signup', datas).then(res => {\r\n            console.log(res.data.mes);\r\n                if(res.data.mes === \"success\" && res.status === 200){\r\n                    alert(\"회원가입 되었습니다.\");\r\n                    history.push(\"/\")\r\n                }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect (() => {\r\n            if (Object.keys(errors).length === 0 && SignUpSuccess) {\r\n                callback();\r\n            }\r\n        },\r\n        [errors]\r\n    );\r\n\r\n    return {handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForm;","D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUpFir.js",["75"],"D:\\project\\ReCoder\\recoder-react\\src\\App.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormSignUp.js",["76","77","78"],"import Axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport useFrom from './useFrom'\r\nimport validate from './validateInfo'\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst FormSignUp = ({SignUpSuccessForm}, props) => {\r\n    const {handleChange, handleChangeType, values, handleSubmit, errors} = useFrom(SignUpSuccessForm, validate, useLocation);\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(localStorage.getItem('token'))\r\n    // })\r\n\r\n    return (\r\n        <div id=\"wrapper\" className=\"bg\">\r\n            <div id=\"container\">\r\n                <div className=\"top_txt\">\r\n                    <p className=\"tit\">온라인 시험 감독 서비스 리코더 회원가입을 환영합니다.</p>\r\n                    <p>부정행위 걱정 없이<br />온라인 시험을 운영, 감독하세요.</p>\r\n                </div>\r\n                <div className=\"login_input_wrap\">\r\n                    <div className=\"wlogo\"><img src=\"./img/login_join_logo.gif\" alt=\"로그인, 회원가입 페이지 로고\" /></div>\r\n                    <p className=\"txt\">Teacher Membership Window</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"userName\"\r\n                            placeholder=\"이름 입력\"\r\n                            value={values.userName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userName && <p className=\"sign_required\">{errors.userName}</p>}\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"userEmail\"\r\n                            placeholder=\"아이디(이메일) 입력\"\r\n                            value={values.userEmail}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userEmail && <p className=\"sign_required\">{errors.userEmail}</p>}\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"userPasswd\"\r\n                            placeholder=\"비밀번호 입력\"\r\n                            value={values.userPasswd}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userPasswd && <p className=\"sign_required\">{errors.userPasswd}</p>}\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"userPasswdConfirm\"\r\n                            placeholder=\"비밀번호 입력확인\"\r\n                            value={values.userPasswdConfirm}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userPasswdConfirm && <p className=\"sign_required\">{errors.userPasswdConfirm}</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"userTel\"\r\n                            placeholder=\"전화번호 입력\"\r\n                            value={values.userTel}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.userTel && <p className=\"sign_required\">{errors.userTel}</p>}\r\n                        <input type=\"submit\" value=\"회원가입\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUp;\r\n",["79","80"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\validateInfo.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\Header.js",[],["81","82"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\FormLogin.js",["83","84","85","86"],"D:\\project\\ReCoder\\recoder-react\\src\\components\\StdNavMenu.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\Footer.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\components\\TchClassMem.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\index.js",[],{"ruleId":"87","severity":1,"message":"88","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":20},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":20,"column":27,"nodeType":"89","messageId":"90","endLine":20,"endColumn":43},{"ruleId":"87","severity":1,"message":"97","line":22,"column":12,"nodeType":"89","messageId":"90","endLine":22,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":80,"column":9,"nodeType":"100","endLine":80,"endColumn":17,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"102","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"103","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"104","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"105","line":8,"column":26,"nodeType":"89","messageId":"90","endLine":8,"endColumn":42},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"93","replacedBy":"109"},{"ruleId":"87","severity":1,"message":"104","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"87","severity":1,"message":"110","line":5,"column":7,"nodeType":"89","messageId":"90","endLine":5,"endColumn":10},{"ruleId":"87","severity":1,"message":"111","line":14,"column":12,"nodeType":"89","messageId":"90","endLine":14,"endColumn":18},{"ruleId":"87","severity":1,"message":"97","line":16,"column":12,"nodeType":"89","messageId":"90","endLine":16,"endColumn":16},"no-unused-vars","'TchContTitle' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'Link' is defined but never used.","'setSignUpSuccess' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SignUpSuccess' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["114"],"'axios' is defined but never used.","'Axios' is defined but never used.","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.",["112"],["113"],["112"],["113"],"'api' is assigned a value but never used.","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [SignUpSuccess, callback, errors]",{"range":"117","text":"118"},[2222,2230],"[SignUpSuccess, callback, errors]"]