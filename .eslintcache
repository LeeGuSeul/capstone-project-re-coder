[{"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js":"1","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js":"2","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js":"3","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js":"4","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js":"5","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js":"6","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\ProblemEditor.js":"7","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js":"8","D:\\project\\ReCoder\\recoder-react\\src\\App.js":"9","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js":"10","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js":"11","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js":"12"},{"size":3074,"mtime":1612098041941,"results":"13","hashOfConfig":"14"},{"size":2134,"mtime":1612336010302,"results":"15","hashOfConfig":"14"},{"size":11277,"mtime":1612923709888,"results":"16","hashOfConfig":"14"},{"size":2640,"mtime":1612921752665,"results":"17","hashOfConfig":"14"},{"size":2662,"mtime":1612931517238,"results":"18","hashOfConfig":"14"},{"size":1187,"mtime":1612922096551,"results":"19","hashOfConfig":"14"},{"size":1034,"mtime":1612924086993,"results":"20","hashOfConfig":"14"},{"size":1980,"mtime":1612251745841,"results":"21","hashOfConfig":"14"},{"size":1270,"mtime":1612872947615,"results":"22","hashOfConfig":"14"},{"size":580,"mtime":1612524499302,"results":"23","hashOfConfig":"14"},{"size":2042,"mtime":1612527777621,"results":"24","hashOfConfig":"14"},{"size":3446,"mtime":1612844797629,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"134o7pz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js",["54","55","56"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js",["57","58","59"],"import { useCookies } from 'react-cookie';\r\nimport useModal from \"./useModal\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst JoinClass = ({ readClass, classListUpdate, userClassInfo }) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [createClassList, setcreateClassList] = useState();\r\n  const [isOpen, setIsOpen, Modal] = useModal();\r\n  const inputTag = useRef();\r\n    \r\n    console.log(userClassInfo);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newClassData;\r\n    console.log(inputTag);\r\n    newClassData = {\r\n      class_code: inputTag.current.value,\r\n      s_email: cookies.s_email,\r\n    };\r\n\r\n    console.log(newClassData);\r\n    axios\r\n      .post(\"/classjoin\", newClassData)\r\n      .then((res) => {\r\n        setcreateClassList(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => readClass(), classListUpdate, setIsOpen(!isOpen));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(!isOpen)}>\r\n        <img src=\"/img/nav_plus_btn.gif\" alt=\"클래스 가입하기\" />\r\n      </button>\r\n      <Modal>\r\n        <div className=\"modal create_class\">\r\n          <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n              <p className=\"tit\">클래스 가입하기</p>\r\n              <p className=\"txt\">\r\n                클래스 초대번호를 입력하시면 해당 클래스에 가입하실 수 있습니다.\r\n              </p>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                ref={inputTag}\r\n                type=\"text\"\r\n                name=\"newClassName\"\r\n                placeholder=\"초대코드를 입력해주세요.\"\r\n              />\r\n              <button type=\"submit\">가입하기</button>\r\n            </form>\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinClass\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js",["60","61"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Footer from \"../../Layout/Footer\";\r\nimport BoardEditor from \"../Editor/BoardEditor\"\r\nimport CreateProblem from \"Components/Modal/CreateProblem\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport { useParams } from 'react-router';\r\n\r\nconst CreateTestForm = () => {\r\n  const [selectDate, setSelectDate] = useState(new Date());\r\n  const [boardFormHtml, setBoardFormHtml] = useState(null);\r\n  const ParamsClassCode = useParams();\r\n\r\n  // useEffect(() => {\r\n  //   problemFormInfoList.push(ProblemFormInfo);\r\n  //   console.log(problemFormInfoList);\r\n  // }, [ProblemFormInfo]);\r\n\r\n  // // 문제 정보\r\n  // let ProblemFormInfo = {\r\n  //   question_name : \"\",\r\n  //   question_score: \"\",\r\n  //   question_text: \"\",\r\n  // };\r\n\r\n  // 시험지 정보\r\n  let TestFormInfo = {\r\n    class_code: \"\",\r\n    test_name: \"\",\r\n    test_start: \"\",\r\n    test_end: \"\",\r\n    test_wait: \"\",\r\n    test_caution: \"\",\r\n    test_retake: \"\",\r\n    test_shuffle: \"\",\r\n    test_escape: \"\",\r\n    test_lang: \"\",\r\n  };\r\n\r\n  const CreateTestFormSubmit = e => {\r\n    e.preventDefault();\r\n    //console.log(e.target.test_start_time.value);\r\n    TestFormInfo.class_code = ParamsClassCode.classCode;\r\n    TestFormInfo.test_name = e.target.text_name.value;\r\n    TestFormInfo.test_start =\r\n      e.target.test_date.value +\r\n      \":\" +\r\n      e.target.test_start_time.value +\r\n      \":\" +\r\n      e.target.test_start_min.value;\r\n    TestFormInfo.test_end =\r\n      e.target.test_date.value +\r\n      \":\" +\r\n      e.target.test_end_time.value +\r\n      \":\" +\r\n      e.target.test_end_min.value;\r\n    TestFormInfo.test_wait = \"00:\" + e.target.test_wait.value + \":00\";\r\n    TestFormInfo.test_caution = boardFormHtml;\r\n    TestFormInfo.test_retake = e.target.test_retake.value;\r\n    TestFormInfo.test_shuffle = e.target.test_shuffle.value;\r\n    TestFormInfo.test_escape = e.target.test_escape.value;\r\n    TestFormInfo.test_lang = e.target.test_lang.value;\r\n\r\n    console.log(TestFormInfo);\r\n  }\r\n\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div className=\"create_class_container\">\r\n          <div className=\"form_contents\">\r\n            <form onSubmit={CreateTestFormSubmit}>\r\n              <div className=\"exam_name_form\">\r\n                <input name=\"text_name\" placeholder=\"시험명을 입력하세요.\" />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">응시기간</p>\r\n                <DatePicker\r\n                  name=\"test_date\"\r\n                  onChange={(date) => setSelectDate(date)}\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  value={selectDate}\r\n                  minDate={new Date()}\r\n                />\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_time\" id=\"slct\">\r\n                      {/* <option selected disabled>\r\n                        Choose an option\r\n                      </option> */}\r\n                      <option value=\"9\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_min\" id=\"slct\">\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <span className=\"bar\">-</span>\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_time\" id=\"slct\">\r\n                      {/* <option selected disabled>\r\n                        Choose an option\r\n                      </option> */}\r\n                      <option value=\"9\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_min\" id=\"slct\">\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">주의사항</p>\r\n                <BoardEditor setBoardFormHtml={setBoardFormHtml} />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험대기시간</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_wait\" id=\"slct\">\r\n                    <option value=\"00\">00분</option>\r\n                    <option value=\"10\">10분</option>\r\n                    <option value=\"20\">20분</option>\r\n                    <option value=\"30\">30분</option>\r\n                    <option value=\"40\">40분</option>\r\n                    <option value=\"50\">50분</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">문제섞기</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_shuffle\" value=\"1\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_shuffle\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험창 이탈허용</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_escape\" value=\"1\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_escape\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">이어보기 설정</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"3\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">무제한</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"1\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">1회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"2\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">2회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"4\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">개발언어</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_lang\" id=\"slct\">\r\n                    <option value=\"PHP\">PHP</option>\r\n                    <option value=\"Python\">Python</option>\r\n                    <option value=\"JavaScript\">JavaScript</option>\r\n                    <option value=\"Java\">Java</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"questions_list\">\r\n                <div className=\"add_questions\">\r\n                  <p className=\"tit\">추가된 문제</p>\r\n                  <CreateProblem />\r\n                </div>\r\n                <div className=\"add_questions_list\">\r\n                  <div className=\"questions_box\">\r\n                    <p className=\"tit\">두직선의 교차 여부 확률 계산</p>\r\n                    <p className=\"score\">\r\n                      <span>20</span>점\r\n                    </p>\r\n                    <div className=\"btn_wrap\">\r\n                      <button className=\"questions_modify\">수정하기</button>\r\n                      <button className=\"questions_delete\">삭제하기</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"submit\">시험 저장하기</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CreateTestForm;\r\n",["62","63"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js",["64"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from 'Components/User/Loading';\r\n\r\nconst ClassTestList = (classCode) => {\r\n  const [selectClassTestInfo, setSelectClassTestInfo] = useState([]);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  console.log(classCode);\r\n\r\n  useEffect(() => {\r\n    MenuSelect(classCode);\r\n  }, [classCode]);\r\n\r\n  const MenuSelect = (e) => {\r\n    flag === true && setFlag(false);\r\n    const data = {\r\n      class_code: e.classCode,\r\n    };\r\n\r\n    axios\r\n      .post(\"/classinfo\", data)\r\n      .then((res) => {\r\n        setSelectClassTestInfo(res.data);\r\n        setFlag(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ListUpdate = selectClassTestInfo.map((currElement) => (\r\n    <tr>\r\n      <th scope=\"row\">{currElement.test_name}</th>\r\n      <td>{currElement.questioncount}문항</td>\r\n      <td>\r\n        {currElement.test_start} ~{currElement.test_end}\r\n      </td>\r\n      <td>\r\n        {currElement.t_test_status === 1 ? (\r\n          <p className=\"tch_test_state complete\">시험완료</p>\r\n        ) : (\r\n          <p className=\"tch_test_state start\">시험시작</p>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button>\r\n          <img src=\"/img/tch_test_delete_btn.png\" alt=\"시험 삭제 버튼\" />\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return flag === true ? (\r\n    selectClassTestInfo.length === 0 ? (\r\n      <div className=\"no_test_guide\">\r\n        생성된 시험이 없습니다. <span>먼저 시험을 생성해주세요.</span>\r\n        <Link to=\"/createtestform\">시험 생성하기</Link>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <table className=\"tch_class_list_table\">\r\n          <colgroup>\r\n            <col width=\"25%\" />\r\n            <col width=\"10%\" />\r\n            <col width=\"37%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"8%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">시험명</th>\r\n              <th scope=\"col\">문항수</th>\r\n              <th scope=\"col\">시험일시</th>\r\n              <th scope=\"col\">상태</th>\r\n              <th scope=\"col\">삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{ListUpdate}</tbody>\r\n        </table>\r\n        <Link\r\n          to={`/createtestform/${classCode.classCode}`}\r\n          className=\"create_test_btn\"\r\n        >\r\n          <span>시험 생성하기</span>\r\n        </Link>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <>\r\n      <Loading />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassTestList\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js",["65","66"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\ProblemEditor.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js",["67","68","69"],"D:\\project\\ReCoder\\recoder-react\\src\\App.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js",["70"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js",["71","72","73","74"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js",["75","76","77","78","79"],{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":2,"column":17,"nodeType":"82","messageId":"83","endLine":2,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":10,"column":5,"nodeType":"82","messageId":"83","endLine":10,"endColumn":21},{"ruleId":"80","severity":1,"message":"86","line":7,"column":19,"nodeType":"82","messageId":"83","endLine":7,"endColumn":28},{"ruleId":"80","severity":1,"message":"87","line":7,"column":30,"nodeType":"82","messageId":"83","endLine":7,"endColumn":42},{"ruleId":"80","severity":1,"message":"88","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":2,"column":17,"nodeType":"82","messageId":"83","endLine":2,"endColumn":26},{"ruleId":"80","severity":1,"message":"89","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":14,"column":6,"nodeType":"96","endLine":14,"endColumn":17,"suggestions":"97"},{"ruleId":"80","severity":1,"message":"98","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":26},{"ruleId":"80","severity":1,"message":"99","line":13,"column":9,"nodeType":"82","messageId":"83","endLine":13,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":9,"column":19,"nodeType":"82","messageId":"83","endLine":9,"endColumn":28},{"ruleId":"80","severity":1,"message":"87","line":9,"column":30,"nodeType":"82","messageId":"83","endLine":9,"endColumn":42},{"ruleId":"94","severity":1,"message":"100","line":35,"column":6,"nodeType":"96","endLine":35,"endColumn":8,"suggestions":"101"},{"ruleId":"80","severity":1,"message":"102","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"103","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"104","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":20},{"ruleId":"80","severity":1,"message":"105","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"104","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":20},{"ruleId":"80","severity":1,"message":"106","line":9,"column":21,"nodeType":"82","messageId":"83","endLine":9,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":17,"column":23,"nodeType":"109","messageId":"110","endLine":17,"endColumn":25},{"ruleId":"80","severity":1,"message":"111","line":73,"column":9,"nodeType":"82","messageId":"83","endLine":73,"endColumn":21},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'createClassList' is assigned a value but never used.","'Footer' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MenuSelect'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'problemBoartHtml' is assigned a value but never used.","'ProblemData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readClass'. Either include it or remove the dependency array.",["115"],"'Link' is defined but never used.","'useState' is defined but never used.","'useCookies' is defined but never used.","'axios' is defined but never used.","'setstdData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'valueChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [MenuSelect, classCode]",{"range":"120","text":"121"},"Update the dependencies array to be: [readClass]",{"range":"122","text":"123"},[411,422],"[MenuSelect, classCode]",[946,948],"[readClass]"]