[{"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js":"1","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js":"2","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js":"3","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js":"4","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js":"5","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js":"6","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js":"7","D:\\project\\ReCoder\\recoder-react\\src\\App.js":"8","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js":"9","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js":"10","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js":"11","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\index.js":"12","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\DeleteClass.js":"13","D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormLogin.js":"14","D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\useFrom.js":"15","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\index.js":"16","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Index.js":"17","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Layout\\Header.js":"18","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateClass.js":"19","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Exam\\TestPrecautions.js":"20","D:\\project\\ReCoder\\recoder-react\\src\\index.js":"21","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Index.js":"22","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\TestList.js":"23","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\QuizEditor.js":"24","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\ProctorExamView.js":"25"},{"size":3074,"mtime":1612098041941,"results":"26","hashOfConfig":"27"},{"size":2134,"mtime":1612336010302,"results":"28","hashOfConfig":"27"},{"size":12847,"mtime":1613028762514,"results":"29","hashOfConfig":"27"},{"size":3579,"mtime":1613035943478,"results":"30","hashOfConfig":"27"},{"size":3944,"mtime":1613042053292,"results":"31","hashOfConfig":"27"},{"size":1187,"mtime":1612922096551,"results":"32","hashOfConfig":"27"},{"size":1980,"mtime":1612251745841,"results":"33","hashOfConfig":"27"},{"size":1561,"mtime":1613145689610,"results":"34","hashOfConfig":"27"},{"size":580,"mtime":1612524499302,"results":"35","hashOfConfig":"27"},{"size":2042,"mtime":1612527777621,"results":"36","hashOfConfig":"27"},{"size":3446,"mtime":1612844797629,"results":"37","hashOfConfig":"27"},{"size":3282,"mtime":1613041412574,"results":"38","hashOfConfig":"27"},{"size":2509,"mtime":1612336005880,"results":"39","hashOfConfig":"27"},{"size":5614,"mtime":1612525703386,"results":"40","hashOfConfig":"27"},{"size":2347,"mtime":1612098035415,"results":"41","hashOfConfig":"27"},{"size":734,"mtime":1613041406989,"results":"42","hashOfConfig":"27"},{"size":3282,"mtime":1613041412574,"results":"43","hashOfConfig":"27"},{"size":1331,"mtime":1612333524254,"results":"44","hashOfConfig":"27"},{"size":1989,"mtime":1612335999510,"results":"45","hashOfConfig":"27"},{"size":4497,"mtime":1613191188968,"results":"46","hashOfConfig":"27"},{"size":350,"mtime":1611385103446,"results":"47","hashOfConfig":"27"},{"size":734,"mtime":1613041406989,"results":"48","hashOfConfig":"27"},{"size":1786,"mtime":1612099435315,"results":"49","hashOfConfig":"27"},{"size":1031,"mtime":1613041968957,"results":"50","hashOfConfig":"27"},{"size":9190,"mtime":1613151867848,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"134o7pz",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormSignUp.js",["118","119","120"],"import Axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport useFrom from \"./useFrom\";\r\nimport validate from \"./validateInfo\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst FormSignUp = ({ SignUpSuccessForm }, props) => {\r\n  const {\r\n    handleChange,\r\n    handleChangeType,\r\n    values,\r\n    handleSubmit,\r\n    errors,\r\n  } = useFrom(SignUpSuccessForm, validate, useLocation);\r\n\r\n  return (\r\n    <div id=\"wrapper\" className=\"bg\">\r\n      <div id=\"container\">\r\n        <div className=\"top_txt\">\r\n          <p className=\"tit\">\r\n            온라인 시험 감독 서비스 리코더 회원가입을 환영합니다.\r\n          </p>\r\n          <p>\r\n            부정행위 걱정 없이\r\n            <br />\r\n            온라인 시험을 운영, 감독하세요.\r\n          </p>\r\n        </div>\r\n        <div className=\"login_input_wrap\">\r\n          <div className=\"wlogo\">\r\n            <img\r\n              src=\"./img/login_join_logo.gif\"\r\n              alt=\"로그인, 회원가입 페이지 로고\"\r\n            />\r\n          </div>\r\n          <p className=\"txt\">Teacher Membership Window</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              placeholder=\"이름 입력\"\r\n              value={values.userName}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userName && (\r\n              <p className=\"sign_required\">{errors.userName}</p>\r\n            )}\r\n            <input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              placeholder=\"아이디(이메일) 입력\"\r\n              value={values.userEmail}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userEmail && (\r\n              <p className=\"sign_required\">{errors.userEmail}</p>\r\n            )}\r\n            <input\r\n              type=\"password\"\r\n              name=\"userPasswd\"\r\n              placeholder=\"비밀번호 입력\"\r\n              value={values.userPasswd}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userPasswd && (\r\n              <p className=\"sign_required\">{errors.userPasswd}</p>\r\n            )}\r\n            <input\r\n              type=\"password\"\r\n              name=\"userPasswdConfirm\"\r\n              placeholder=\"비밀번호 입력확인\"\r\n              value={values.userPasswdConfirm}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userPasswdConfirm && (\r\n              <p className=\"sign_required\">{errors.userPasswdConfirm}</p>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              name=\"userTel\"\r\n              placeholder=\"전화번호 입력\"\r\n              value={values.userTel}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.userTel && (\r\n              <p className=\"sign_required\">{errors.userTel}</p>\r\n            )}\r\n            <input type=\"submit\" value=\"회원가입\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignUp;\r\n",["121","122"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\JoinClass.js",["123","124","125"],"import { useCookies } from 'react-cookie';\r\nimport useModal from \"./useModal\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst JoinClass = ({ readClass, classListUpdate, userClassInfo }) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [createClassList, setcreateClassList] = useState();\r\n  const [isOpen, setIsOpen, Modal] = useModal();\r\n  const inputTag = useRef();\r\n    \r\n    console.log(userClassInfo);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newClassData;\r\n    console.log(inputTag);\r\n    newClassData = {\r\n      class_code: inputTag.current.value,\r\n      s_email: cookies.s_email,\r\n    };\r\n\r\n    console.log(newClassData);\r\n    axios\r\n      .post(\"/classjoin\", newClassData)\r\n      .then((res) => {\r\n        setcreateClassList(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => readClass(), classListUpdate, setIsOpen(!isOpen));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(!isOpen)}>\r\n        <img src=\"/img/nav_plus_btn.gif\" alt=\"클래스 가입하기\" />\r\n      </button>\r\n      <Modal>\r\n        <div className=\"modal create_class\">\r\n          <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n              <p className=\"tit\">클래스 가입하기</p>\r\n              <p className=\"txt\">\r\n                클래스 초대번호를 입력하시면 해당 클래스에 가입하실 수 있습니다.\r\n              </p>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                ref={inputTag}\r\n                type=\"text\"\r\n                name=\"newClassName\"\r\n                placeholder=\"초대코드를 입력해주세요.\"\r\n              />\r\n              <button type=\"submit\">가입하기</button>\r\n            </form>\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinClass\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\CreateTestForm.js",["126"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Footer from \"../../Layout/Footer\";\r\nimport BoardEditor from \"../Editor/BoardEditor\"\r\nimport CreateProblem from \"Components/Modal/CreateProblem\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport { useHistory, useParams } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst CreateTestForm = () => {\r\n  const [selectDate, setSelectDate] = useState(new Date());\r\n  const [boardFormHtml, setBoardFormHtml] = useState(null);\r\n  const history = useHistory();\r\n  const [quizList, setQuizList] = useState([])\r\n  const ParamsClassCode = useParams();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n  // 시험지 정보\r\n  let TestFormInfo = {\r\n    class_code: \"\",\r\n    test_name: \"\",\r\n    test_start: \"\",\r\n    test_end: \"\",\r\n    test_wait: \"\",\r\n    test_caution: \"\",\r\n    test_retake: \"\",\r\n    test_shuffle: \"\",\r\n    test_escape: \"\",\r\n    test_lang: \"\",\r\n  };\r\n\r\n  const CreateTestFormSubmit = e => {\r\n    e.preventDefault();\r\n    TestFormInfo.class_code = ParamsClassCode.classCode;\r\n    TestFormInfo.test_name = e.target.text_name.value;\r\n    TestFormInfo.test_start =\r\n      e.target.test_date.value +\r\n      \" \" +\r\n      e.target.test_start_time.value +\r\n      \":\" +\r\n      e.target.test_start_min.value +\r\n      \":00\";\r\n    TestFormInfo.test_end =\r\n      e.target.test_date.value +\r\n      \" \" +\r\n      e.target.test_end_time.value +\r\n      \":\" +\r\n      e.target.test_end_min.value+\r\n      \":00\";\r\n    TestFormInfo.test_wait = \"00:\" + e.target.test_wait.value + \":00\";\r\n    TestFormInfo.test_caution = boardFormHtml;\r\n    TestFormInfo.test_retake = e.target.test_retake.value;\r\n    TestFormInfo.test_shuffle = e.target.test_shuffle.value;\r\n    TestFormInfo.test_escape = e.target.test_escape.value;\r\n    TestFormInfo.test_lang = e.target.test_lang.value;\r\n\r\n    console.log(TestFormInfo);\r\n    console.log(quizList);\r\n\r\n    const AllTestInfoArr = [];\r\n\r\n    AllTestInfoArr.push(TestFormInfo);\r\n    quizList.map((v, index) => AllTestInfoArr.push(quizList[index]));\r\n\r\n    console.log(AllTestInfoArr);\r\n\r\n\r\n    axios.post(\"/examcreate\", AllTestInfoArr)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        !alert(`[${TestFormInfo.test_name}] 시험 생성이 완료되었습니다.`) &&\r\n          history.push(`/teacher/${ParamsClassCode.classCode}`);\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div className=\"create_class_container\">\r\n          <div className=\"form_contents\">\r\n            <form onSubmit={CreateTestFormSubmit}>\r\n              <div className=\"exam_name_form\">\r\n                <input\r\n                  name=\"text_name\"\r\n                  autocomplete=\"off\"\r\n                  placeholder=\"시험명을 입력하세요.\"\r\n                />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">응시기간</p>\r\n                <DatePicker\r\n                  name=\"test_date\"\r\n                  onChange={(date) => setSelectDate(date)}\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  value={selectDate}\r\n                  minDate={new Date()}\r\n                />\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_time\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        시작시간(시)\r\n                      </option>\r\n                      <option value=\"09\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_start_min\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        시작시간(분)\r\n                      </option>\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <span className=\"bar\">-</span>\r\n                <div className=\"select_wrap\">\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_time\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        종료시간(시)\r\n                      </option>\r\n                      <option value=\"09\">9시</option>\r\n                      <option value=\"10\">10시</option>\r\n                      <option value=\"11\">11시</option>\r\n                      <option value=\"12\">12시</option>\r\n                      <option value=\"13\">13시</option>\r\n                      <option value=\"14\">14시</option>\r\n                      <option value=\"15\">15시</option>\r\n                      <option value=\"16\">16시</option>\r\n                      <option value=\"17\">17시</option>\r\n                      <option value=\"18\">18시</option>\r\n                      <option value=\"19\">19시</option>\r\n                      <option value=\"20\">20시</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"select\">\r\n                    <select name=\"test_end_min\" id=\"slct\">\r\n                      <option selected disabled>\r\n                        종료시간(분)\r\n                      </option>\r\n                      <option value=\"00\">00분</option>\r\n                      <option value=\"10\">10분</option>\r\n                      <option value=\"20\">20분</option>\r\n                      <option value=\"30\">30분</option>\r\n                      <option value=\"40\">40분</option>\r\n                      <option value=\"50\">50분</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">주의사항</p>\r\n                <BoardEditor setBoardFormHtml={setBoardFormHtml} />\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험대기시간</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_wait\" id=\"slct\">\r\n                    <option value=\"10\">10분</option>\r\n                    <option value=\"20\">20분</option>\r\n                    <option value=\"30\">30분</option>\r\n                    <option value=\"40\">40분</option>\r\n                    <option value=\"50\">50분</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">문제섞기</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_shuffle\"\r\n                        value=\"1\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_shuffle\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">시험창 이탈허용</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_escape\"\r\n                        value=\"1\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">허용</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_escape\" value=\"0\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">이어보기 설정</p>\r\n                <div className=\"radio_wrap\">\r\n                  <div className=\"light\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"test_retake\"\r\n                        value=\"3\"\r\n                        defaultChecked\r\n                      />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">무제한</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"1\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">1회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"2\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">2회</span>\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" name=\"test_retake\" value=\"4\" />\r\n                      <span class=\"design\"></span>\r\n                      <span class=\"text\">비허용</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/**/}\r\n              <div className=\"test_width_input\">\r\n                <p className=\"width_input_tit\">개발언어</p>\r\n                <div className=\"select\">\r\n                  <select name=\"test_lang\" id=\"slct\">\r\n                    <option value=\"PHP\">PHP</option>\r\n                    <option value=\"Python\">Python</option>\r\n                    <option value=\"JavaScript\">JavaScript</option>\r\n                    <option value=\"Java\">Java</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"questions_list\">\r\n                <div className=\"add_questions\">\r\n                  <p className=\"tit\">추가된 문제</p>\r\n                  <CreateProblem\r\n                    quizList={quizList}\r\n                    setQuizList={setQuizList}\r\n                  />\r\n                </div>\r\n                <div className=\"add_questions_list\">\r\n                  {quizList.length !== 0 ? (\r\n                    quizList.map((v) => (\r\n                      <div className=\"questions_box\">\r\n                        <p className=\"tit\">{v.question_name}</p>\r\n                        <p className=\"score\">\r\n                          <span>{v.question_score}</span>점\r\n                        </p>\r\n                        <div className=\"btn_wrap\">\r\n                          <div className=\"btn questions_modify\">수정하기</div>\r\n                          <div className=\"btn questions_delete\">삭제하기</div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"questions_box\">생성된 문제가 없습니다.</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"test_save_btn\">\r\n                <button type=\"submit\">시험 저장하기</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CreateTestForm;\r\n",["127","128"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ClassTestList.js",["129","130","131"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Loading from 'Components/User/Loading';\r\n\r\nconst ClassTestList = (classCode) => {\r\n  const [selectClassTestInfo, setSelectClassTestInfo] = useState([]);\r\n  const [testCode, setTestCode] = useState(\"\");\r\n  const classCodeParams = useParams();\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  // classCode.classCode.length === 0\r\n  //   ? console.log(\"prams쓰면 됨\")\r\n  //   : console.log(classCode.classCode.length);\r\n  // console.log(classCodeParams.classCode.length);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    classCode.classCode.length === 0\r\n      ? MenuSelect(classCodeParams.classCode)\r\n      : MenuSelect(classCode.classCode);\r\n  }, [classCode]);\r\n\r\n  const MenuSelect = e => {\r\n    flag === true && setFlag(false);\r\n    const data = {\r\n      class_code: e,\r\n    };\r\n\r\n    axios\r\n      .post(\"/classinfo\", data)\r\n      .then((res) => {\r\n        setSelectClassTestInfo(res.data);\r\n        setFlag(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ListUpdate = selectClassTestInfo ? (\r\n    selectClassTestInfo.map((currElement) => (\r\n      <tr>\r\n        <th scope=\"row\">{currElement.test_name}</th>\r\n        <td>{currElement.questioncount}문항</td>\r\n        <td>\r\n          {currElement.test_start} ~{currElement.test_end}\r\n        </td>\r\n        <td>\r\n          {currElement.t_test_status === 1 ? (\r\n            <p className=\"tch_test_state complete\">시험완료</p>\r\n          ) : (\r\n            <p className=\"tch_test_state start\">시험시작</p>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button onClick={() => TestListDelete(currElement.test_id)}>\r\n            <img src=\"/img/tch_test_delete_btn.png\" alt=\"시험 삭제 버튼\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ))\r\n  ) : (\r\n    <Loading />\r\n  );\r\n\r\n  const TestListDelete = (props) => {\r\n    let data = {\r\n      test_id: props,\r\n    };\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(\"/examdelete\", data)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(\"삭제되었습니다.\");\r\n        window.location.replace(`/teacher/${classCode.classCode}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return flag === true ? (\r\n    selectClassTestInfo.length === 0 ? (\r\n      <div className=\"no_test_guide\">\r\n        생성된 시험이 없습니다. <span>먼저 시험을 생성해주세요.</span>\r\n        <Link to=\"/createtestform\">시험 생성하기</Link>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <table className=\"tch_class_list_table\">\r\n          <colgroup>\r\n            <col width=\"25%\" />\r\n            <col width=\"10%\" />\r\n            <col width=\"37%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"8%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">시험명</th>\r\n              <th scope=\"col\">문항수</th>\r\n              <th scope=\"col\">시험일시</th>\r\n              <th scope=\"col\">상태</th>\r\n              <th scope=\"col\">삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{ListUpdate}</tbody>\r\n        </table>\r\n          <Link\r\n          to={`/createtestform/${classCodeParams.classCode}`}\r\n          className=\"create_test_btn\"\r\n        >\r\n          <span>시험 생성하기</span>\r\n        </Link>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <>\r\n      <Loading />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassTestList\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateProblem.js",["132"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport useModal from \"./useModal\";\r\nimport QuizEditor from \"../Teacher/Editor/QuizEditor\";\r\n\r\nconst CreateProblemInfo = ({ setIsOpen, quizList, setQuizList }) => {\r\n  const [problemBoartHtml, setProblemBoartHtml] = useState(null);\r\n  const [questionName, setQuestionName] = useState(\"\");\r\n  const [questionScore, setQuestionSocre] = useState(\"\");\r\n  const [questionCode, setQuestionCode] = useState(\"\");\r\n\r\n  const CreateProblemList = e => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n\r\n    let ProblemData = {\r\n      question_name: \"\",\r\n      question_score: \"\",\r\n      question_text: \"\",\r\n      question_code: \"\",\r\n    };\r\n\r\n    ProblemData.question_name = e.target.newClassName;\r\n    ProblemData.question_score = e.target.new_problem_score;\r\n    ProblemData.question_text = e.target.problemBoartHtml;\r\n    ProblemData.question_code = e.target.new_problem_default_code;\r\n\r\n    console.log(ProblemData);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    setQuizList([...quizList, {\r\n      question_name: questionName,\r\n      question_score:questionScore,\r\n      question_text:problemBoartHtml,\r\n      question_code:questionCode\r\n    }])\r\n  }\r\n\r\n  const handleChange = (e, setFunction) => {\r\n    e.preventDefault();\r\n    setFunction(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(questionName, questionScore, problemBoartHtml, questionCode)\r\n  })\r\n\r\n  return (\r\n    <div className=\"create_problem_area\">\r\n      <form onSubmit={CreateProblemList}>\r\n        <div className=\"input_area\">\r\n          <label>문제명</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"newClassName\"\r\n            className=\"new_problem_name\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionName);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input_area\">\r\n          <label>배점</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"newClassScore\"\r\n            className=\"new_problem_score\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionSocre);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <p>문제지문입력</p>\r\n          <QuizEditor setProblemBoartHtml={setProblemBoartHtml} />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <p>기본제공코드</p>\r\n          <textarea\r\n            name=\"new_problem_default_code\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            placeholder=\"시험에 제공되는 기본 코드를 입력해주세요.\"\r\n            onChange={(e) => {\r\n              handleChange(e, setQuestionCode);\r\n            }}\r\n          ></textarea>\r\n          <div className=\"btn_wrap\">\r\n            <button\r\n              className=\"create_problem_btn\"\r\n              onClick={(e) => {\r\n                handleCreate();\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              생성하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst CreateProblem = ({quizList, setQuizList}) => {\r\n  const [isOpen, setIsOpen, Modal] = useModal();\r\n\r\n  console.log(isOpen);\r\n  return (\r\n    <>\r\n      <div className=\"add_questions_btn\" onClick={() => setIsOpen(!isOpen)}>\r\n        문제 추가하기\r\n      </div>\r\n      <Modal>\r\n        <div className=\"modal create_problem \">\r\n          <div className=\"modal_area\">\r\n            <p className=\"tit\">새로운 문제 추가하기</p>\r\n\r\n            <CreateProblemInfo setIsOpen={setIsOpen}\r\n              setQuizList={setQuizList}\r\n              quizList={quizList}\r\n            />\r\n\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProblem;\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\BoardEditor.js",[],["133","134"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\ContSideMenu.js",["135","136","137"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport JoinClass from \"Components/Modal/JoinClass\";\r\nimport DeleteClass from \"Components/Modal/DeleteClass\";\r\n\r\nconst ContSideMenu = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [userClassInfo, setUserClassInfo] = useState([]);\r\n\r\n  const readClass = () => {\r\n    let userEmail;\r\n\r\n    if (cookies.t_email) {\r\n      userEmail = { t_email: cookies.t_email };\r\n    } else if (cookies.s_email) {\r\n      userEmail = { s_email: cookies.s_email };\r\n    } else {\r\n      return null;\r\n    }\r\n    console.log(userEmail);\r\n    axios\r\n      .post(\"classlist\", userEmail)\r\n      .then((res) => {\r\n        setUserClassInfo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    readClass();\r\n  }, []);\r\n\r\n  const classListUpdate = userClassInfo.map((currElement) => (\r\n    <li>\r\n      <Link to=\"\">\r\n        {currElement.class_name} <span>{currElement.recognize === 0 ? \"(가입승인중)\" : \"\"} </span>\r\n      </Link>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div id=\"nav_menu\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"nav_tit\">\r\n            <p>나의 클래스</p>\r\n            <div className=\"nav_tit_btn\">\r\n              <JoinClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n              <DeleteClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ul className=\"dep2\">{classListUpdate}</ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 통계</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContSideMenu;\r\n",["138","139"],"D:\\project\\ReCoder\\recoder-react\\src\\App.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContTitle.js",["140"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContTitle = () => {\r\n  return (\r\n    <div className=\"cont_tit\">\r\n      <p className=\"eng_txt\">className :</p>\r\n      <p className=\"class_name\">우당탕탕 웹디제이</p>\r\n\r\n      <div className=\"test_info\">\r\n        <p className=\"test_num\">\r\n          전체 시험 수 <span className=\"mint\">10</span>개\r\n        </p>\r\n        <p className=\"test_std\">\r\n          전체 학생 수 <span className=\"blue\">30</span>명\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContTitle;\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\ContSideMenu.js",["141","142","143","144"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport CreateClass from \"Components/Modal/CreateClass\";\r\nimport DeleteClass from \"Components/Modal/DeleteClass\";\r\n\r\n\r\nconst ContSideMenu = ({ userClassInfo, setclassCode, readClass }) => {\r\n\r\n  const MenuState = useParams();\r\n  console.log(MenuState);\r\n  const test =\r\n    userClassInfo.length !== 0 && MenuState.classCode === undefined\r\n      ? userClassInfo[0].class_code\r\n      : MenuState.classCode;\r\n\r\n  const classListUpdate = () => {\r\n    if (userClassInfo.length === 0) {\r\n      return <li className=\"no_class_list\">생성된 클래스가 없습니다.</li>;\r\n    } else {\r\n      const ListUpdate = userClassInfo.map((currElement) => (\r\n        <li>\r\n          <Link\r\n            className={currElement.class_code === test ? \"on\" : \"\"}\r\n            to={`/teacher/${currElement.class_code}`}\r\n            onClick={() => {\r\n              setclassCode(currElement.class_code);\r\n            }}\r\n          >\r\n            {currElement.class_name}\r\n          </Link>\r\n        </li>\r\n      ));\r\n      return ListUpdate;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"nav_menu\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"nav_tit\">\r\n            <p>나의 클래스</p>\r\n            <div className=\"nav_tit_btn\">\r\n              <CreateClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n              />\r\n              <DeleteClass\r\n                readClass={readClass}\r\n                classListUpdate={classListUpdate}\r\n                userClassInfo={userClassInfo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ul className=\"dep2\">{classListUpdate()}</ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 통계</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"\">시험 체험하기</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContSideMenu;\r\n",["145","146"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\StdClassJoinApp.js",["147","148","149","150","151"],"import React, { useEffect, useState } from 'react'\r\nimport useModal from \"./useModal\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n\r\n  const ClassJoinStdList = ({ appllyStdList, classCode, setIsOpen }) => {\r\n    const [stdList, setStdList] = useState([]);\r\n    const [stdData, setstdData] = useState([]);\r\n\r\n    const appllyStdListSubmit = () => {\r\n      let data = {\r\n        class_code: \"\",\r\n        s_email: \"\",\r\n      };\r\n\r\n      stdList.map((v) => {\r\n        data = { class_code: classCode.classCode, s_email: v.s_email };\r\n        stdData.push(data);\r\n      });\r\n\r\n      axios\r\n        .post(\"/classrecognize\", stdData)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .then(() => setIsOpen(false));\r\n    };\r\n\r\n    return (\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          appllyStdListSubmit();\r\n        }}\r\n      >\r\n        <div className=\"class_list_area\">\r\n          {appllyStdList.length === 0 ? (\r\n            <p className=\"no_class_list\">가입 신청한 학생이 없습니다.</p>\r\n          ) : (appllyStdList.map((v, index) =>\r\n              v.recognize === 0 ? (\r\n                <div className=\"class_list_check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`stdLikt-${index}`}\r\n                    name={v.s_email}\r\n                    onChange={(e) => {\r\n                      e.target.checked\r\n                        ? setStdList([...stdList, v])\r\n                        : setStdList(stdList.filter((value) => value !== v));\r\n                    }}\r\n                  />\r\n                  <label for={`stdLikt-${index}`}>\r\n                    {v.s_name}\r\n                    <span className=\"std_email\">{v.s_email}</span>\r\n                  </label>\r\n                </div>\r\n              ) : null\r\n            )\r\n          )}\r\n        </div>\r\n        <button type=\"submit\">가입승인</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\nconst StdClassJoinApp = ({ appllyStdList, classCode }) => {\r\n  const [isOpen, setIsOpen, Modal] = useModal();  \r\n  \r\n  const valueChecked = () => { \r\n      if (appllyStdList) {\r\n        const data = {\r\n          class_code: classCode.classCode,\r\n          s_email: appllyStdList.s_email,\r\n        };\r\n        const ddd = [];\r\n        ddd.push(data);\r\n        return ddd;\r\n      }\r\n  }\r\n  \r\n\r\n  // classinfo API 완료 후 클래스 회원 가입 승인 작업\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(!isOpen)}>신청학생승인</button>\r\n      <Modal>\r\n        <div className=\"modal std_class_app\">\r\n          <div className=\"modal_area\">\r\n            <div className=\"modal_head\">\r\n              <p className=\"tit\">클래스 신청학생승인</p>\r\n              <p className=\"txt\">\r\n                클래스 가입을 신청한 학생들을 확인 및 승인을 할 수 있습니다.\r\n              </p>\r\n            </div>\r\n            <ClassJoinStdList\r\n              appllyStdList={appllyStdList}\r\n              classCode={classCode}\r\n              setIsOpen={setIsOpen}\r\n            />\r\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\r\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StdClassJoinApp\r\n","D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\index.js",["152","153","154","155","156"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\DeleteClass.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\FormLogin.js",["157","158","159","160","161"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\User\\useFrom.js",["162","163","164","165"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Index.js",["166","167","168","169","170"],"import React, { useEffect, useState } from \"react\";\r\nimport ContTitle from \"./ContTitle\";\r\nimport ClassMemList from \"./ClassMemList\";\r\nimport ClassTestList from \"./ClassTestList\";\r\nimport ContSideMenu from \"./ContSideMenu\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from 'axios'\r\nimport { Cookies, useCookies } from \"react-cookie\";\r\n\r\nconst Index = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n  const [classCode, setclassCode] = useState(\"\"); //  해당 클래스 시험 정보\r\n  const [userClassInfo, setUserClassInfo] = useState([]);\r\n  const classCodeParams = useParams();\r\n\r\n    const readClass = () => {\r\n      let userEmail;\r\n    \r\n      if (cookies.t_email) {\r\n        userEmail = { t_email: cookies.t_email };\r\n      } else if (cookies.s_email) {\r\n        userEmail = { s_email: cookies.s_email };\r\n      } else {\r\n        return null;\r\n      }\r\n\r\n      console.log(userEmail);\r\n      axios\r\n        .post(\"/classlist\", userEmail)\r\n        .then((res) => {\r\n          setUserClassInfo(res.data);\r\n          !classCodeParams.hasOwnProperty(\"classCode\")\r\n            ? setclassCode(res.data[0].class_code)\r\n            : setclassCode(classCodeParams.classCode);\r\n        })\r\n        .catch((err) => { \r\n          console.log(err);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n      readClass();\r\n    }, []);\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <div id=\"container\">\r\n        <ContSideMenu\r\n          setclassCode={setclassCode}\r\n          userClassInfo={userClassInfo}\r\n          readClass={readClass}\r\n        />\r\n        <div id=\"contents\">\r\n          <div className=\"cont_visual\">\r\n            <p className=\"eng small\">Welcome.</p>\r\n            <p className=\"eng big\">Re:Coder</p>\r\n            <p className=\"kor\">공정한 시험 문화를 위한 코딩 테스트 프로그램</p>\r\n          </div>\r\n          <div className=\"cont_tit\">\r\n            <p className=\"eng_txt\">className :</p>\r\n            <p className=\"class_name\">\r\n              {console.log(classCode)}\r\n              {userClassInfo.map((v) =>\r\n                v.class_code === classCode ? v.class_name : \"\"\r\n              )}\r\n            </p>\r\n\r\n            <div className=\"test_info\">\r\n              <p className=\"test_num\">\r\n                전체 시험 수 <span className=\"mint\">10</span>개\r\n              </p>\r\n              <p className=\"test_std\">\r\n                전체 학생 수 <span className=\"blue\">30</span>명\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"cont_wrap\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>시험관리</Tab>\r\n                <Tab>회원관리</Tab>\r\n                <Tab>클래스 통계</Tab>\r\n              </TabList>\r\n\r\n              <TabPanel>\r\n                <ClassTestList classCode={classCode} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <ClassMemList classCode={classCode} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <img src=\"../img/tab_page3.png\" alt=\"클래스통계_예시\" />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n",["171","172"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Layout\\Header.js",["173","174","175"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Modal\\CreateClass.js",["176","177","178"],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Exam\\TestPrecautions.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\Index.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Student\\TestList.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Editor\\QuizEditor.js",[],"D:\\project\\ReCoder\\recoder-react\\src\\Components\\Teacher\\Exam\\ProctorExamView.js",[],{"ruleId":"179","severity":1,"message":"180","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"183","line":2,"column":17,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"184","line":10,"column":5,"nodeType":"181","messageId":"182","endLine":10,"endColumn":21},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"179","severity":1,"message":"189","line":7,"column":19,"nodeType":"181","messageId":"182","endLine":7,"endColumn":28},{"ruleId":"179","severity":1,"message":"190","line":7,"column":30,"nodeType":"181","messageId":"182","endLine":7,"endColumn":42},{"ruleId":"179","severity":1,"message":"191","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":25},{"ruleId":"179","severity":1,"message":"192","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"185","replacedBy":"193"},{"ruleId":"187","replacedBy":"194"},{"ruleId":"179","severity":1,"message":"195","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":18},{"ruleId":"179","severity":1,"message":"196","line":8,"column":20,"nodeType":"181","messageId":"182","endLine":8,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":22,"column":6,"nodeType":"199","endLine":22,"endColumn":17,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"201","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":34},{"ruleId":"185","replacedBy":"202"},{"ruleId":"187","replacedBy":"203"},{"ruleId":"179","severity":1,"message":"189","line":9,"column":19,"nodeType":"181","messageId":"182","endLine":9,"endColumn":28},{"ruleId":"179","severity":1,"message":"190","line":9,"column":30,"nodeType":"181","messageId":"182","endLine":9,"endColumn":42},{"ruleId":"197","severity":1,"message":"204","line":35,"column":6,"nodeType":"199","endLine":35,"endColumn":8,"suggestions":"205"},{"ruleId":"185","replacedBy":"206"},{"ruleId":"187","replacedBy":"207"},{"ruleId":"179","severity":1,"message":"208","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"209","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"210","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":20},{"ruleId":"179","severity":1,"message":"211","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":13},{"ruleId":"185","replacedBy":"212"},{"ruleId":"187","replacedBy":"213"},{"ruleId":"179","severity":1,"message":"183","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"210","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":20},{"ruleId":"179","severity":1,"message":"214","line":9,"column":21,"nodeType":"181","messageId":"182","endLine":9,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":17,"column":23,"nodeType":"217","messageId":"218","endLine":17,"endColumn":25},{"ruleId":"179","severity":1,"message":"219","line":73,"column":9,"nodeType":"181","messageId":"182","endLine":73,"endColumn":21},{"ruleId":"179","severity":1,"message":"220","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"221","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":17},{"ruleId":"179","severity":1,"message":"189","line":12,"column":19,"nodeType":"181","messageId":"182","endLine":12,"endColumn":28},{"ruleId":"179","severity":1,"message":"190","line":12,"column":30,"nodeType":"181","messageId":"182","endLine":12,"endColumn":42},{"ruleId":"197","severity":1,"message":"204","line":44,"column":8,"nodeType":"199","endLine":44,"endColumn":10,"suggestions":"222"},{"ruleId":"179","severity":1,"message":"223","line":6,"column":7,"nodeType":"181","messageId":"182","endLine":6,"endColumn":10},{"ruleId":"179","severity":1,"message":"224","line":15,"column":10,"nodeType":"181","messageId":"182","endLine":15,"endColumn":16},{"ruleId":"179","severity":1,"message":"225","line":17,"column":10,"nodeType":"181","messageId":"182","endLine":17,"endColumn":14},{"ruleId":"179","severity":1,"message":"226","line":18,"column":10,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"197","severity":1,"message":"227","line":28,"column":8,"nodeType":"199","endLine":28,"endColumn":10,"suggestions":"228"},{"ruleId":"179","severity":1,"message":"208","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"229","line":20,"column":27,"nodeType":"181","messageId":"182","endLine":20,"endColumn":43},{"ruleId":"179","severity":1,"message":"225","line":22,"column":12,"nodeType":"181","messageId":"182","endLine":22,"endColumn":16},{"ruleId":"197","severity":1,"message":"230","line":80,"column":9,"nodeType":"199","endLine":80,"endColumn":17,"suggestions":"231"},{"ruleId":"179","severity":1,"message":"220","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"221","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":17},{"ruleId":"179","severity":1,"message":"189","line":12,"column":19,"nodeType":"181","messageId":"182","endLine":12,"endColumn":28},{"ruleId":"179","severity":1,"message":"190","line":12,"column":30,"nodeType":"181","messageId":"182","endLine":12,"endColumn":42},{"ruleId":"197","severity":1,"message":"204","line":44,"column":8,"nodeType":"199","endLine":44,"endColumn":10,"suggestions":"232"},{"ruleId":"185","replacedBy":"233"},{"ruleId":"187","replacedBy":"234"},{"ruleId":"179","severity":1,"message":"235","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"226","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":17},{"ruleId":"179","severity":1,"message":"189","line":6,"column":19,"nodeType":"181","messageId":"182","endLine":6,"endColumn":28},{"ruleId":"179","severity":1,"message":"189","line":7,"column":21,"nodeType":"181","messageId":"182","endLine":7,"endColumn":30},{"ruleId":"179","severity":1,"message":"190","line":7,"column":32,"nodeType":"181","messageId":"182","endLine":7,"endColumn":44},{"ruleId":"179","severity":1,"message":"191","line":8,"column":12,"nodeType":"181","messageId":"182","endLine":8,"endColumn":27},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'handleChangeType' is assigned a value but never used.","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'createClassList' is assigned a value but never used.","'Footer' is defined but never used.",["236"],["237"],"'testCode' is assigned a value but never used.","'setTestCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'MenuSelect' and 'classCodeParams.classCode'. Either include them or remove the dependency array.","ArrayExpression",["238"],"'useRef' is defined but never used.",["236"],["237"],"React Hook useEffect has a missing dependency: 'readClass'. Either include it or remove the dependency array.",["239"],["236"],["237"],"'Link' is defined but never used.","'useState' is defined but never used.","'useCookies' is defined but never used.","'axios' is defined but never used.",["236"],["237"],"'setstdData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'valueChecked' is assigned a value but never used.","'ContTitle' is defined but never used.","'Cookies' is defined but never used.",["240"],"'api' is assigned a value but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'removeCookie'. Either include it or remove the dependency array.",["241"],"'setSignUpSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SignUpSuccess' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],["243"],["236"],["237"],"'cookies' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"246","fix":"253"},"Update the dependencies array to be: [MenuSelect, classCode, classCodeParams.classCode]",{"range":"254","text":"255"},"Update the dependencies array to be: [readClass]",{"range":"256","text":"257"},{"range":"258","text":"257"},"Update the dependencies array to be: [removeCookie]",{"range":"259","text":"260"},"Update the dependencies array to be: [SignUpSuccess, callback, errors]",{"range":"261","text":"262"},{"range":"263","text":"257"},[789,800],"[MenuSelect, classCode, classCodeParams.classCode]",[946,948],"[readClass]",[1394,1396],[853,855],"[removeCookie]",[2222,2230],"[SignUpSuccess, callback, errors]",[1394,1396]]